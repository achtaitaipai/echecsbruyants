{"mappings":"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AAC;AAAE,SAAC;AAAC,UAAE;AAAE,SAAC;AACjD,SAAC;AAAC,UAAE;AAAE,SAAC;AAAE,SAAC;AAAE,SAAC;AAAE,SAAC;AAAE,SAAC;AAAE,UAAE;AAAG,SAAC;AAAE,SAAC;AAAE,SAAC;AAAE,SAAC;AAAE,SAAC;AAAC,UAAE;AAAE,SAAC;AAAE,SAAC;AAChD,SAAC;AAAE,SAAC;AAAC,UAAE;AAAE,SAAC;AAAE,SAAC;AAAE,SAAC;AAAE,SAAC;AAAE,UAAE;AAAG,SAAC;AAAE,SAAC;AAAE,SAAC;AAAE,SAAC;AAAC,UAAE;AAAE,SAAC;AAAE,SAAC;AAAE,SAAC;AAChD,SAAC;AAAE,SAAC;AAAE,SAAC;AAAC,UAAE;AAAE,SAAC;AAAE,SAAC;AAAE,SAAC;AAAE,UAAE;AAAG,SAAC;AAAE,SAAC;AAAE,SAAC;AAAC,UAAE;AAAE,SAAC;AAAE,SAAC;AAAE,SAAC;AAAE,SAAC;AAChD,SAAC;AAAE,SAAC;AAAE,SAAC;AAAE,SAAC;AAAC,UAAE;AAAE,SAAC;AAAE,SAAC;AAAE,UAAE;AAAG,SAAC;AAAE,SAAC;AAAC,UAAE;AAAE,SAAC;AAAE,SAAC;AAAE,SAAC;AAAE,SAAC;AAAE,SAAC;AAChD,SAAC;AAAE,SAAC;AAAE,SAAC;AAAE,SAAC;AAAE,SAAC;AAAC,UAAE;AAAE,SAAC;AAAE,UAAE;AAAG,SAAC;AAAC,UAAE;AAAE,SAAC;AAAE,SAAC;AAAE,SAAC;AAAE,SAAC;AAAE,SAAC;AAAE,SAAC;AAChD,SAAC;AAAE,SAAC;AAAE,SAAC;AAAE,SAAC;AAAE,SAAC;AAAE,SAAC;AAAC,UAAE;AAAE,UAAE;AAAE,UAAE;AAAE,SAAC;AAAE,SAAC;AAAE,SAAC;AAAE,SAAC;AAAE,SAAC;AAAE,SAAC;AAAE,SAAC;AAChD,UAAE;AAAC,UAAE;AAAC,UAAE;AAAC,UAAE;AAAC,UAAE;AAAC,UAAE;AAAC,UAAE;AAAG,SAAC;AAAE,UAAE;AAAC,UAAE;AAAC,UAAE;AAAC,UAAE;AAAC,UAAE;AAAC,UAAE;AAAC,UAAE;AAAE,SAAC;AACjD,SAAC;AAAE,SAAC;AAAE,SAAC;AAAE,SAA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","sources":["node_modules/@parcel/runtime-browser-hmr/lib/runtime-1364f9ef6b0f41fe.js","src/main.js","src/js/chessboard.js","node_modules/@parcel/transformer-js/src/esmodule-helpers.js","node_modules/cm-pgn/src/cm-pgn/Pgn.js","node_modules/cm-pgn/src/cm-pgn/Header.js","node_modules/cm-pgn/src/cm-pgn/History.js","node_modules/cm-pgn/src/cm-pgn/parser/pgnParser.js","node_modules/cm-pgn/lib/chess.mjs/Chess.js","node_modules/@chess-fu/fen-parser/dist/src/fenParser.js","src/js/pieces.js","src/js/utils.js","src/pgn/pgns.js"],"sourcesContent":["var HMR_HOST = null;var HMR_PORT = null;var HMR_SECURE = false;var HMR_ENV_HASH = \"d6ea1d42532a7575\";module.bundle.HMR_BUNDLE_ID = \"bed887d14d6bcbeb\";\"use strict\";\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n/* global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE */\n\n/*::\nimport type {\n  HMRAsset,\n  HMRMessage,\n} from '@parcel/reporter-dev-server/src/HMRServer.js';\ninterface ParcelRequire {\n  (string): mixed;\n  cache: {|[string]: ParcelModule|};\n  hotData: mixed;\n  Module: any;\n  parent: ?ParcelRequire;\n  isParcelRequire: true;\n  modules: {|[string]: [Function, {|[string]: string|}]|};\n  HMR_BUNDLE_ID: string;\n  root: ParcelRequire;\n}\ninterface ParcelModule {\n  hot: {|\n    data: mixed,\n    accept(cb: (Function) => void): void,\n    dispose(cb: (mixed) => void): void,\n    // accept(deps: Array<string> | string, cb: (Function) => void): void,\n    // decline(): void,\n    _acceptCallbacks: Array<(Function) => void>,\n    _disposeCallbacks: Array<(mixed) => void>,\n  |};\n}\ndeclare var module: {bundle: ParcelRequire, ...};\ndeclare var HMR_HOST: string;\ndeclare var HMR_PORT: string;\ndeclare var HMR_ENV_HASH: string;\ndeclare var HMR_SECURE: boolean;\n*/\nvar OVERLAY_ID = '__parcel__error__overlay__';\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function accept(fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function dispose(fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n  module.bundle.hotData = undefined;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets\n/*: {|[string]: boolean|} */\n, acceptedAssets\n/*: {|[string]: boolean|} */\n, assetsToAccept\n/*: Array<[ParcelRequire, string]> */\n;\n\nfunction getHostname() {\n  return HMR_HOST || (location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');\n}\n\nfunction getPort() {\n  return HMR_PORT || location.port;\n} // eslint-disable-next-line no-redeclare\n\n\nvar parent = module.bundle.parent;\n\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = getHostname();\n  var port = getPort();\n  var protocol = HMR_SECURE || location.protocol == 'https:' && !/localhost|127.0.0.1|0.0.0.0/.test(hostname) ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/'); // $FlowFixMe\n\n  ws.onmessage = function (event\n  /*: {data: string, ...} */\n  ) {\n    checkedAssets = {}\n    /*: {|[string]: boolean|} */\n    ;\n    acceptedAssets = {}\n    /*: {|[string]: boolean|} */\n    ;\n    assetsToAccept = [];\n    var data\n    /*: HMRMessage */\n    = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      // Remove error overlay if there is one\n      if (typeof document !== 'undefined') {\n        removeErrorOverlay();\n      }\n\n      var assets = data.assets.filter(function (asset) {\n        return asset.envHash === HMR_ENV_HASH;\n      }); // Handle HMR Update\n\n      var handled = assets.every(function (asset) {\n        return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);\n      });\n\n      if (handled) {\n        console.clear();\n        assets.forEach(function (asset) {\n          hmrApply(module.bundle.root, asset);\n        });\n\n        for (var i = 0; i < assetsToAccept.length; i++) {\n          var id = assetsToAccept[i][1];\n\n          if (!acceptedAssets[id]) {\n            hmrAcceptRun(assetsToAccept[i][0], id);\n          }\n        }\n      } else {\n        window.location.reload();\n      }\n    }\n\n    if (data.type === 'error') {\n      // Log parcel errors to console\n      var _iterator = _createForOfIteratorHelper(data.diagnostics.ansi),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var ansiDiagnostic = _step.value;\n          var stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;\n          console.error('🚨 [parcel]: ' + ansiDiagnostic.message + '\\n' + stack + '\\n\\n' + ansiDiagnostic.hints.join('\\n'));\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      if (typeof document !== 'undefined') {\n        // Render the fancy html overlay\n        removeErrorOverlay();\n        var overlay = createErrorOverlay(data.diagnostics.html); // $FlowFixMe\n\n        document.body.appendChild(overlay);\n      }\n    }\n  };\n\n  ws.onerror = function (e) {\n    console.error(e.message);\n  };\n\n  ws.onclose = function () {\n    console.warn('[parcel] 🚨 Connection to the HMR server was lost');\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n\n  if (overlay) {\n    overlay.remove();\n    console.log('[parcel] ✨ Error resolved');\n  }\n}\n\nfunction createErrorOverlay(diagnostics) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n  var errorHTML = '<div style=\"background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;\">';\n\n  var _iterator2 = _createForOfIteratorHelper(diagnostics),\n      _step2;\n\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var diagnostic = _step2.value;\n      var stack = diagnostic.codeframe ? diagnostic.codeframe : diagnostic.stack;\n      errorHTML += \"\\n      <div>\\n        <div style=\\\"font-size: 18px; font-weight: bold; margin-top: 20px;\\\">\\n          \\uD83D\\uDEA8 \".concat(diagnostic.message, \"\\n        </div>\\n        <pre>\").concat(stack, \"</pre>\\n        <div>\\n          \").concat(diagnostic.hints.map(function (hint) {\n        return '<div>💡 ' + hint + '</div>';\n      }).join(''), \"\\n        </div>\\n        \").concat(diagnostic.documentation ? \"<div>\\uD83D\\uDCDD <a style=\\\"color: violet\\\" href=\\\"\".concat(diagnostic.documentation, \"\\\" target=\\\"_blank\\\">Learn more</a></div>\") : '', \"\\n      </div>\\n    \");\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n\n  errorHTML += '</div>';\n  overlay.innerHTML = errorHTML;\n  return overlay;\n}\n\nfunction getParents(bundle, id)\n/*: Array<[ParcelRequire, string]> */\n{\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n\n      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {\n        parents.push([bundle, k]);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n\n  newLink.onload = function () {\n    if (link.parentNode !== null) {\n      // $FlowFixMe\n      link.parentNode.removeChild(link);\n    }\n  };\n\n  newLink.setAttribute('href', // $FlowFixMe\n  link.getAttribute('href').split('?')[0] + '?' + Date.now()); // $FlowFixMe\n\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\n\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n\n    for (var i = 0; i < links.length; i++) {\n      // $FlowFixMe[incompatible-type]\n      var href\n      /*: string */\n      = links[i].getAttribute('href');\n      var hostname = getHostname();\n      var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\\\/\\\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());\n      var absolute = /^https?:\\/\\//i.test(href) && href.indexOf(window.location.origin) !== 0 && !servedFromHMRServer;\n\n      if (!absolute) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nfunction hmrApply(bundle\n/*: ParcelRequire */\n, asset\n/*:  HMRAsset */\n) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (asset.type === 'css') {\n    reloadCSS();\n  } else if (asset.type === 'js') {\n    var deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];\n\n    if (deps) {\n      if (modules[asset.id]) {\n        // Remove dependencies that are removed and will become orphaned.\n        // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.\n        var oldDeps = modules[asset.id][1];\n\n        for (var dep in oldDeps) {\n          if (!deps[dep] || deps[dep] !== oldDeps[dep]) {\n            var id = oldDeps[dep];\n            var parents = getParents(module.bundle.root, id);\n\n            if (parents.length === 1) {\n              hmrDelete(module.bundle.root, id);\n            }\n          }\n        }\n      }\n\n      var fn = new Function('require', 'module', 'exports', asset.output);\n      modules[asset.id] = [fn, deps];\n    } else if (bundle.parent) {\n      hmrApply(bundle.parent, asset);\n    }\n  }\n}\n\nfunction hmrDelete(bundle, id) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (modules[id]) {\n    // Collect dependencies that will become orphaned when this module is deleted.\n    var deps = modules[id][1];\n    var orphans = [];\n\n    for (var dep in deps) {\n      var parents = getParents(module.bundle.root, deps[dep]);\n\n      if (parents.length === 1) {\n        orphans.push(deps[dep]);\n      }\n    } // Delete the module. This must be done before deleting dependencies in case of circular dependencies.\n\n\n    delete modules[id];\n    delete bundle.cache[id]; // Now delete the orphans.\n\n    orphans.forEach(function (id) {\n      hmrDelete(module.bundle.root, id);\n    });\n  } else if (bundle.parent) {\n    hmrDelete(bundle.parent, id);\n  }\n}\n\nfunction hmrAcceptCheck(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n, depsByBundle\n/*: ?{ [string]: { [string]: string } }*/\n) {\n  if (hmrAcceptCheckOne(bundle, id, depsByBundle)) {\n    return true;\n  } // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.\n\n\n  var parents = getParents(module.bundle.root, id);\n  var accepted = false;\n\n  while (parents.length > 0) {\n    var v = parents.shift();\n    var a = hmrAcceptCheckOne(v[0], v[1], null);\n\n    if (a) {\n      // If this parent accepts, stop traversing upward, but still consider siblings.\n      accepted = true;\n    } else {\n      // Otherwise, queue the parents in the next level upward.\n      var p = getParents(module.bundle.root, v[1]);\n\n      if (p.length === 0) {\n        // If there are no parents, then we've reached an entry without accepting. Reload.\n        accepted = false;\n        break;\n      }\n\n      parents.push.apply(parents, _toConsumableArray(p));\n    }\n  }\n\n  return accepted;\n}\n\nfunction hmrAcceptCheckOne(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n, depsByBundle\n/*: ?{ [string]: { [string]: string } }*/\n) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {\n    // If we reached the root bundle without finding where the asset should go,\n    // there's nothing to do. Mark as \"accepted\" so we don't reload the page.\n    if (!bundle.parent) {\n      return true;\n    }\n\n    return hmrAcceptCheck(bundle.parent, id, depsByBundle);\n  }\n\n  if (checkedAssets[id]) {\n    return true;\n  }\n\n  checkedAssets[id] = true;\n  var cached = bundle.cache[id];\n  assetsToAccept.push([bundle, id]);\n\n  if (!cached || cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n}\n\nfunction hmrAcceptRun(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n\n  if (cached && cached.hot) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n  cached = bundle.cache[id];\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      var assetsToAlsoAccept = cb(function () {\n        return getParents(module.bundle.root, id);\n      });\n\n      if (assetsToAlsoAccept && assetsToAccept.length) {\n        // $FlowFixMe[method-unbinding]\n        assetsToAccept.push.apply(assetsToAccept, assetsToAlsoAccept);\n      }\n    });\n  }\n\n  acceptedAssets[id] = true;\n}","import Chessboard from './js/chessboard'\r\n// import pieces from './js/pieces'\r\nimport { Pawn, Rook, Knight, Bishop, Queen, King } from './js/pieces'\r\nimport { Pgn } from 'cm-pgn'\r\nimport FenParser from '@chess-fu/fen-parser'\r\nimport { rounds } from './pgn/pgns'\r\n\r\nconst prev = document.getElementById('prev-js')\r\nconst play = document.getElementById('play-js')\r\nconst next = document.getElementById('next-js')\r\nconst stop = document.getElementById('stop-js')\r\nconst delay = document.getElementById('delay-js')\r\nconst gameInput = document.getElementById('game-js')\r\nconst audioInputs = [...document.getElementsByClassName('audio-input')]\r\nlet audios = {}\r\n\r\nlet cursor = 0\r\nlet pgn, fens, moves, boards\r\nconst chessboard = new Chessboard(document.getElementById('chessboard'))\r\n\r\n/**\r\n * Load a game\r\n * @param {Number} g number of the game to load\r\n */\r\nfunction initGame(g) {\r\n\tcursor = 0\r\n\tpgn = new Pgn(rounds[g])\r\n\tfens = pgn.history.moves.map(m => {\r\n\t\tconst fen = new FenParser(m.fen)\r\n\t\treturn fen.ranks\r\n\t})\r\n\tconst initialPosition = new FenParser('rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1')\r\n\tfens.unshift(initialPosition.ranks)\r\n\r\n\tboards = []\r\n\tfens.forEach(fen => {\r\n\t\tconst pieces = []\r\n\t\tfen.forEach((row, y) => {\r\n\t\t\t;[...row].forEach((p, x) => {\r\n\t\t\t\tif (p === 'P') {\r\n\t\t\t\t\tpieces.push(new Pawn({ y: x, x: 7 - y }, true))\r\n\t\t\t\t} else if (p === 'p') {\r\n\t\t\t\t\tpieces.push(new Pawn({ y: x, x: 7 - y }, false))\r\n\t\t\t\t} else if (p === 'r') {\r\n\t\t\t\t\tpieces.push(new Rook({ y: x, x: 7 - y }, false))\r\n\t\t\t\t} else if (p === 'R') {\r\n\t\t\t\t\tpieces.push(new Rook({ y: x, x: 7 - y }, true))\r\n\t\t\t\t} else if (p === 'n') {\r\n\t\t\t\t\tpieces.push(new Knight({ y: x, x: 7 - y }, false))\r\n\t\t\t\t} else if (p === 'N') {\r\n\t\t\t\t\tpieces.push(new Knight({ y: x, x: 7 - y }, true))\r\n\t\t\t\t} else if (p === 'b') {\r\n\t\t\t\t\tpieces.push(new Bishop({ y: x, x: 7 - y }, false))\r\n\t\t\t\t} else if (p === 'B') {\r\n\t\t\t\t\tpieces.push(new Bishop({ y: x, x: 7 - y }, true))\r\n\t\t\t\t} else if (p === 'q') {\r\n\t\t\t\t\tpieces.push(new Queen({ y: x, x: 7 - y }, false))\r\n\t\t\t\t} else if (p === 'Q') {\r\n\t\t\t\t\tpieces.push(new Queen({ y: x, x: 7 - y }, true))\r\n\t\t\t\t} else if (p === 'k') {\r\n\t\t\t\t\tpieces.push(new King({ y: x, x: 7 - y }, false))\r\n\t\t\t\t} else if (p === 'K') {\r\n\t\t\t\t\tpieces.push(new King({ y: x, x: 7 - y }, true))\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t})\r\n\t\tboards.push(pieces)\r\n\t})\r\n\tmoves = pgn.history.moves.map(m => {\r\n\t\treturn m.flags\r\n\t})\r\n}\r\n/**\r\n * draw chessboard and pieces of current position of current game\r\n */\r\nfunction draw() {\r\n\tchessboard.draw()\r\n\r\n\tboards[cursor].forEach(p => {\r\n\t\tp.draw(chessboard)\r\n\t})\r\n}\r\n/**\r\n * play the correspondant audio on new move\r\n */\r\nfunction nextMove() {\r\n\tconst m = moves[cursor]\r\n\tif (audios[m]) {\r\n\t\taudios[m].play()\r\n\t}\r\n}\r\n\r\n/////Events\r\n//event on each audio input\r\naudioInputs.forEach(el => {\r\n\tel.addEventListener('change', e => {\r\n\t\tconst id = e.target.id\r\n\t\t// Make sure we have files to use\r\n\t\tif (!e.target.files.length) return\r\n\r\n\t\t// Create a blob that we can use as an src for our audio element\r\n\t\tconst urlObj = URL.createObjectURL(e.target.files[0])\r\n\r\n\t\t// Create an audio element\r\n\t\taudios[id] = document.createElement('audio')\r\n\r\n\t\t// Clean up the URL Object after we are done with it\r\n\t\taudios[id].addEventListener('load', () => {\r\n\t\t\tURL.revokeObjectURL(urlObj)\r\n\t\t})\r\n\r\n\t\t// Append the audio element\r\n\t\t// document.body.appendChild(audio)\r\n\r\n\t\t// Allow us to control the audio\r\n\t\taudios[id].controls = 'true'\r\n\r\n\t\t// Set the src and start loading the audio from the file\r\n\t\taudios[id].src = urlObj\r\n\t\taudios[id].play()\r\n\t})\r\n})\r\n\r\n//event on select game\r\ngameInput.addEventListener('change', e => {\r\n\tinitGame(e.target.value)\r\n})\r\n\r\n//event on next btn\r\nnext.addEventListener('click', e => {\r\n\tnextMove()\r\n\tcursor = Math.min(cursor + 1, boards.length - 1)\r\n\tdraw()\r\n})\r\n\r\n//event on prev btn\r\nprev.addEventListener('click', e => {\r\n\tcursor = Math.max(cursor - 1, 0)\r\n\tdraw()\r\n})\r\n\r\n//event on stop btn\r\nstop.addEventListener('click', e => {\r\n\tcursor = 0\r\n\tif (playing) playPause()\r\n\tdraw()\r\n})\r\n\r\n//play/pause game\r\nlet playingId\r\nlet playing = false\r\nplay.addEventListener('click', playPause)\r\n\r\nfunction playPause() {\r\n\tplaying = !playing\r\n\tplay.innerHTML = playing ? '<i class=\"fa fa-pause\" aria-hidden=\"true\"></i>' : '<i class=\"fa fa-play\" aria-hidden=\"true\"></i>'\r\n\tif (playing) {\r\n\t\tplayingId = window.setInterval(() => {\r\n\t\t\tnextMove()\r\n\t\t\tcursor++\r\n\t\t\tif (cursor >= boards.length - 1) playPause()\r\n\t\t\telse draw()\r\n\t\t}, delay.value * 1000)\r\n\t} else {\r\n\t\tclearInterval(playingId)\r\n\t}\r\n}\r\n\r\ninitGame(0)\r\ndraw()\r\n","/**\r\n *\r\n * @param {HTMLElement} canvas\r\n */\r\nexport default function Chessboard(canvas) {\r\n\tthis.ctx = canvas.getContext('2d')\r\n\tthis.width = canvas.width\r\n\tthis.height = canvas.width\r\n\tthis.cellWidth = this.width / 8\r\n\tthis.cellHeight = this.height / 8\r\n\tthis.draw = function () {\r\n\t\tthis.ctx.clearRect(0, 0, this.width, this.height)\r\n\t\tfor (let index = 0; index < 64; index++) {\r\n\t\t\tconst y = Math.floor(index / 8)\r\n\t\t\tconst x = index - y * 8\r\n\t\t\tconst color = 'rgb(233, 244, 251)'\r\n\t\t\tthis.ctx.strokeStyle = color\r\n\t\t\tthis.ctx.strokeRect(x * this.cellWidth, y * this.cellHeight, this.cellWidth, this.cellHeight)\r\n\t\t}\r\n\t}\r\n}\r\n","exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (key === 'default' || key === '__esModule' || dest.hasOwnProperty(key)) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n","/**\n * Author and copyright: Stefan Haack (https://shaack.com)\n * Repository: https://github.com/shaack/cm-pgn\n * License: MIT, see file 'LICENSE'\n */\nimport {Header, TAGS} from \"./Header.js\"\nimport {History} from \"./History.js\"\n\nexport class Pgn {\n\n    constructor(pgnString = \"\", props = {}) {\n        // only the header?\n        const lastHeaderElement =  pgnString.trim().substr(-1) === \"]\" ? pgnString.length : pgnString.lastIndexOf(\"]\\n\\n\") + 1\n        const headerString = pgnString.substr(0, lastHeaderElement)\n        const historyString = pgnString.substr(lastHeaderElement)\n        const sloppy = !!props.sloppy\n        this.header = new Header(headerString)\n        if (this.header.tags[TAGS.SetUp] === \"1\" && this.header.tags[TAGS.FEN]) {\n            this.history = new History(historyString, this.header.tags[TAGS.FEN], sloppy)\n        } else {\n            this.history = new History(historyString, undefined, sloppy)\n        }\n    }\n\n    render() {\n        let pgn = \"\"\n        pgn += this.header.render()\n        pgn += \"\\n\"\n        pgn += this.history.render()\n        return pgn\n    }\n\n}","/**\n * Author and copyright: Stefan Haack (https://shaack.com)\n * Repository: https://github.com/shaack/cm-pgn\n * License: MIT, see file 'LICENSE'\n */\nexport const TAGS = {\n\n    // Standard \"Seven Tag Roster\"\n    Event: \"Event\", // the name of the tournament or match event\n    Site: \"Site\", // the location of the event\n    Date: \"Date\", // the starting date of the game (format: YYYY.MM.TT)\n    Round: \"Round\", // the playing round ordinal of the game\n    White: \"White\", // the player of the white pieces (last name, pre name)\n    Black: \"Black\", // the player of the black pieces (last name, pre name)\n    Result: \"Result\", // the result of the game (1-0, 1/2-1/2, 0-1, *)\n\n    // Optional (http://www.saremba.de/chessgml/standards/pgn/pgn-complete.htm#c9)\n    //      Player related information\n    WhiteTitle: \"WhiteTitle\", BlackTitle: \"BlackTitle\", // These use string values such as \"FM\", \"IM\", and \"GM\"; these tags are used only for the standard abbreviations for FIDE titles. A value of \"-\" is used for an untitled player.\n    WhiteElo: \"WhiteElo\", BlackElo: \"BlackElo\", // These tags use integer values; these are used for FIDE Elo ratings. A value of \"-\" is used for an unrated player.\n    WhiteUSCF: \"WhiteUSCF\", BlackUSCF: \"BlackUSCF\", // These tags use integer values; these are used for USCF (United States Chess Federation) ratings. Similar tag names can be constructed for other rating agencies.\n    WhiteNA: \"WhiteNA\", BlackNA: \"BlackNA:\", // These tags use string values; these are the e-mail or network addresses of the players. A value of \"-\" is used for a player without an electronic address.\n    WhiteType: \"WhiteType\", BlackType: \"BlackType\", // These tags use string values; these describe the player types. The value \"human\" should be used for a person while the value \"program\" should be used for algorithmic (computer) players.\n    //      Event related information\n    EventDate: \"EventDate\", // This uses a date value, similar to the Date tag field, that gives the starting date of the Event.\n    EventSponsor: \"EventSponsor\", // This uses a string value giving the name of the sponsor of the event.\n    Section: \"Section\", // This uses a string; this is used for the playing section of a tournament (e.g., \"Open\" or \"Reserve\").\n    Stage: \"Stage\", // This uses a string; this is used for the stage of a multistage event (e.g., \"Preliminary\" or \"Semifinal\").\n    Board: \"Board\", // This uses an integer; this identifies the board number in a team event and also in a simultaneous exhibition.\n    //      Opening information (locale specific)\n    Opening: \"Opening\", // This uses a string; this is used for the traditional opening name. This will vary by locale. This tag pair is associated with the use of the EPD opcode \"v0\" described in a later section of this document.\n    ECO: \"ECO\", // This uses a string of either the form \"XDD\" or the form \"XDD/DD\" where the \"X\" is a letter from \"A\" to \"E\" and the \"D\" positions are digits.\n    //      Time and date related information\n    Time: \"Time\", // Time the game started, in \"HH:MM:SS\" format, in local clock time.\n    UTCTime: \"UTCTime\", // This tag is similar to the Time tag except that the time is given according to the Universal Coordinated Time standard.\n    UTCDate: \"UTCDate\", // This tag is similar to the Date tag except that the date is given according to the Universal Coordinated Time standard.\n    //      Time control\n    TimeControl: \"TimeControl\", // 40/7200:3600 (moves per seconds: sudden death seconds)\n    //      Alternative starting positions\n    SetUp: \"SetUp\", // \"0\": position is start position, \"1\": tag FEN defines the position\n    FEN: \"FEN\", //  Alternative start position, tag SetUp has to be set to \"1\"\n    //      Game conclusion\n    Termination: \"Termination\", // Gives more details about the termination of the game. It may be \"abandoned\", \"adjudication\" (result determined by third-party adjudication), \"death\", \"emergency\", \"normal\", \"rules infraction\", \"time forfeit\", or \"unterminated\".\n    //      Miscellaneous\n    Annotator: \"Annotator\", // The person providing notes to the game.\n    Mode: \"Mode\", // \"OTB\" (over-the-board) \"ICS\" (Internet Chess Server)\n    PlyCount: \"PlyCount\", // String value denoting total number of half-moves played.\n\n}\n\nexport class Header {\n\n    constructor(headerString = \"\") {\n        this.clear()\n        const rows = headerString.match(/\\[([^\\]]+)]/g)\n        if (rows && rows.length > 0) {\n            for (let i = 0; i < rows.length; i++) {\n                let tag = rows[i].match(/\\[(\\w+)\\s+\"([^\"]+)\"/)\n                if (tag) {\n                    this.tags[tag[1]] = tag[2]\n                }\n            }\n        }\n    }\n\n    clear() {\n        this.tags = {}\n    }\n\n    render() {\n        let rendered = \"\"\n        for (const tag in this.tags) {\n            rendered += `[${tag} \"${this.tags[tag]}\"]\\n`\n        }\n        return rendered\n    }\n\n}\n\n","/**\n * Author and copyright: Stefan Haack (https://shaack.com)\n * Repository: https://github.com/shaack/cm-pgn\n * License: MIT, see file 'LICENSE'\n */\nimport {pgnParser} from \"./parser/pgnParser.js\"\nimport {Chess} from \"../../lib/chess.mjs/Chess.js\"\n\nfunction IllegalMoveException(fen, notation) {\n    this.fen = fen\n    this.notation = notation\n    this.toString = function () {\n        return \"IllegalMoveException: \" + fen + \" => \" + notation\n    }\n}\n\nexport class History {\n\n    constructor(historyString = undefined, setUpFen = undefined, sloppy = false) {\n        if (!historyString) {\n            this.clear()\n        } else {\n            const parsedMoves = pgnParser.parse(historyString.replace(/\\s\\s+/g, \" \").replace(/\\n/g, \" \"))\n            this.moves = this.traverse(parsedMoves[0], setUpFen, undefined, 1, sloppy)\n        }\n        this.setUpFen = setUpFen\n    }\n\n    clear() {\n        this.moves = []\n    }\n\n    traverse(parsedMoves, fen, parent = undefined, ply = 1, sloppy = false) {\n        const chess = fen ? new Chess(fen) : new Chess() // chess.js must be included in HTML\n        const moves = []\n        let previousMove = parent\n        for (let parsedMove of parsedMoves) {\n            if (parsedMove.notation) {\n                const notation = parsedMove.notation.notation\n                const move = chess.move(notation, {sloppy: sloppy})\n                if (move) {\n                    if (previousMove) {\n                        move.previous = previousMove\n                        previousMove.next = move\n                    } else {\n                        move.previous = undefined\n                    }\n                    move.ply = ply\n                    this.fillMoveFromChessState(move, chess)\n                    if (parsedMove.nag) {\n                        move.nag = parsedMove.nag[0]\n                    }\n                    if (parsedMove.commentBefore) {\n                        move.commentBefore = parsedMove.commentBefore\n                    }\n                    if (parsedMove.commentMove) {\n                        move.commentMove = parsedMove.commentMove\n                    }\n                    if (parsedMove.commentAfter) {\n                        move.commentAfter = parsedMove.commentAfter\n                    }\n                    move.variations = []\n                    const parsedVariations = parsedMove.variations\n                    if (parsedVariations.length > 0) {\n                        const lastFen = moves.length > 0 ? moves[moves.length - 1].fen : fen\n                        for (let parsedVariation of parsedVariations) {\n                            move.variations.push(this.traverse(parsedVariation, lastFen, previousMove, ply, sloppy))\n                        }\n                    }\n                    move.variation = moves\n                    moves.push(move)\n                    previousMove = move\n                } else {\n                    throw new IllegalMoveException(chess.fen(), notation)\n                }\n            }\n            ply++\n        }\n        return moves\n    }\n\n    fillMoveFromChessState(move, chess) {\n        move.fen = chess.fen()\n        move.variations = []\n        if (chess.game_over()) {\n            move.gameOver = true\n            if (chess.in_draw()) {\n                move.inDraw = true\n            }\n            if (chess.in_stalemate()) {\n                move.inStalemate = true\n            }\n            if (chess.insufficient_material()) {\n                move.insufficientMaterial = true\n            }\n            if (chess.in_threefold_repetition()) {\n                move.inThreefoldRepetition = true\n            }\n            if (chess.in_checkmate()) {\n                move.inCheckmate = true\n            }\n        }\n        if (chess.in_check()) {\n            move.inCheck = true\n        }\n    }\n\n    /**\n     * @param move\n     * @return the history to the move which may be in a variation\n     */\n    historyToMove(move) {\n        const moves = []\n        let pointer = move\n        moves.push(pointer)\n        while (pointer.previous) {\n            moves.push(pointer.previous)\n            pointer = pointer.previous\n        }\n        return moves.reverse()\n    }\n\n    addMove(notation, previous = undefined, sloppy = true) {\n        if (!previous) {\n            if (this.moves.length > 0) {\n                previous = this.moves[this.moves.length - 1]\n            }\n        }\n        const chess = new Chess(this.setUpFen ? this.setUpFen : undefined)\n        if (previous) {\n            const historyToMove = this.historyToMove(previous)\n            for (const moveInHistory of historyToMove) {\n                chess.move(moveInHistory)\n            }\n        }\n        const move = chess.move(notation, {sloppy: sloppy})\n        if (!move) {\n            throw new Error(\"invalid move\")\n        }\n        this.fillMoveFromChessState(move, chess)\n        if (previous) {\n            move.previous = previous\n            move.ply = previous.ply + 1\n            if (previous.next) {\n                previous.next.variations.push([])\n                move.variation = previous.next.variations[previous.next.variations.length - 1]\n                move.variation.push(move)\n            } else {\n                previous.next = move\n                move.variation = previous.variation\n                previous.variation.push(move)\n            }\n        } else {\n            move.variation = this.moves\n            move.ply = 1\n            this.moves.push(move)\n        }\n        return move\n    }\n\n    render() {\n        // TODO Variants\n        let rendered = \"\";\n        // let i = 0\n        for (const move of this.moves) {\n           rendered += move.san + \" \"\n        }\n        return rendered\n    }\n\n}\n","/*\n * Generated by PEG.js 0.10.0.\n *\n * http://pegjs.org/\n */\n\n\"use strict\";\n\nfunction peg$subclass(child, parent) {\n  function ctor() { this.constructor = child; }\n  ctor.prototype = parent.prototype;\n  child.prototype = new ctor();\n}\n\nfunction peg$SyntaxError(message, expected, found, location) {\n  this.message  = message;\n  this.expected = expected;\n  this.found    = found;\n  this.location = location;\n  this.name     = \"SyntaxError\";\n\n  if (typeof Error.captureStackTrace === \"function\") {\n    Error.captureStackTrace(this, peg$SyntaxError);\n  }\n}\n\npeg$subclass(peg$SyntaxError, Error);\n\npeg$SyntaxError.buildMessage = function(expected, found) {\n  var DESCRIBE_EXPECTATION_FNS = {\n        literal: function(expectation) {\n          return \"\\\"\" + literalEscape(expectation.text) + \"\\\"\";\n        },\n\n        \"class\": function(expectation) {\n          var escapedParts = \"\",\n              i;\n\n          for (i = 0; i < expectation.parts.length; i++) {\n            escapedParts += expectation.parts[i] instanceof Array\n              ? classEscape(expectation.parts[i][0]) + \"-\" + classEscape(expectation.parts[i][1])\n              : classEscape(expectation.parts[i]);\n          }\n\n          return \"[\" + (expectation.inverted ? \"^\" : \"\") + escapedParts + \"]\";\n        },\n\n        any: function(expectation) {\n          return \"any character\";\n        },\n\n        end: function(expectation) {\n          return \"end of input\";\n        },\n\n        other: function(expectation) {\n          return expectation.description;\n        }\n      };\n\n  function hex(ch) {\n    return ch.charCodeAt(0).toString(16).toUpperCase();\n  }\n\n  function literalEscape(s) {\n    return s\n      .replace(/\\\\/g, '\\\\\\\\')\n      .replace(/\"/g,  '\\\\\"')\n      .replace(/\\0/g, '\\\\0')\n      .replace(/\\t/g, '\\\\t')\n      .replace(/\\n/g, '\\\\n')\n      .replace(/\\r/g, '\\\\r')\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n  }\n\n  function classEscape(s) {\n    return s\n      .replace(/\\\\/g, '\\\\\\\\')\n      .replace(/\\]/g, '\\\\]')\n      .replace(/\\^/g, '\\\\^')\n      .replace(/-/g,  '\\\\-')\n      .replace(/\\0/g, '\\\\0')\n      .replace(/\\t/g, '\\\\t')\n      .replace(/\\n/g, '\\\\n')\n      .replace(/\\r/g, '\\\\r')\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n  }\n\n  function describeExpectation(expectation) {\n    return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);\n  }\n\n  function describeExpected(expected) {\n    var descriptions = new Array(expected.length),\n        i, j;\n\n    for (i = 0; i < expected.length; i++) {\n      descriptions[i] = describeExpectation(expected[i]);\n    }\n\n    descriptions.sort();\n\n    if (descriptions.length > 0) {\n      for (i = 1, j = 1; i < descriptions.length; i++) {\n        if (descriptions[i - 1] !== descriptions[i]) {\n          descriptions[j] = descriptions[i];\n          j++;\n        }\n      }\n      descriptions.length = j;\n    }\n\n    switch (descriptions.length) {\n      case 1:\n        return descriptions[0];\n\n      case 2:\n        return descriptions[0] + \" or \" + descriptions[1];\n\n      default:\n        return descriptions.slice(0, -1).join(\", \")\n          + \", or \"\n          + descriptions[descriptions.length - 1];\n    }\n  }\n\n  function describeFound(found) {\n    return found ? \"\\\"\" + literalEscape(found) + \"\\\"\" : \"end of input\";\n  }\n\n  return \"Expected \" + describeExpected(expected) + \" but \" + describeFound(found) + \" found.\";\n};\n\nfunction peg$parse(input, options) {\n  options = options !== void 0 ? options : {};\n\n  var peg$FAILED = {},\n\n      peg$startRuleFunctions = { pgn: peg$parsepgn },\n      peg$startRuleFunction  = peg$parsepgn,\n\n      peg$c0 = function(pw, all) { var arr = (all ? all : []); arr.unshift(pw);return arr; },\n      peg$c1 = function(pb, all) { var arr = (all ? all : []); arr.unshift(pb); return arr; },\n      peg$c2 = function() { return [[]]; },\n      peg$c3 = function(pw) { return pw; },\n      peg$c4 = function(pb) { return pb; },\n      peg$c5 = function(cm, mn, cb, hm, nag, ca, vari, all) { var arr = (all ? all : []);\n            var move = {}; move.turn = 'w'; move.moveNumber = mn;\n            move.notation = hm; move.commentBefore = cb; move.commentAfter = ca; move.commentMove = cm;\n            move.variations = (vari ? vari : []); move.nag = (nag ? nag : null); arr.unshift(move); return arr; },\n      peg$c6 = function(cm, me, cb, hm, nag, ca, vari, all) { var arr = (all ? all : []);\n            var move = {}; move.turn = 'b'; move.moveNumber = me;\n            move.notation = hm; move.commentBefore = cb; move.commentAfter = ca;\n            move.variations = (vari ? vari : []); arr.unshift(move); move.nag = (nag ? nag : null); return arr; },\n      peg$c7 = \"1:0\",\n      peg$c8 = peg$literalExpectation(\"1:0\", false),\n      peg$c9 = function() { return [\"1:0\"]; },\n      peg$c10 = \"0:1\",\n      peg$c11 = peg$literalExpectation(\"0:1\", false),\n      peg$c12 = function() { return [\"0:1\"]; },\n      peg$c13 = \"1-0\",\n      peg$c14 = peg$literalExpectation(\"1-0\", false),\n      peg$c15 = function() { return [\"1-0\"]; },\n      peg$c16 = \"0-1\",\n      peg$c17 = peg$literalExpectation(\"0-1\", false),\n      peg$c18 = function() { return [\"0-1\"]; },\n      peg$c19 = \"1/2-1/2\",\n      peg$c20 = peg$literalExpectation(\"1/2-1/2\", false),\n      peg$c21 = function() { return [\"1/2-1/2\"]; },\n      peg$c22 = \"*\",\n      peg$c23 = peg$literalExpectation(\"*\", false),\n      peg$c24 = function() { return [\"*\"]; },\n      peg$c25 = /^[^}]/,\n      peg$c26 = peg$classExpectation([\"}\"], true, false),\n      peg$c27 = function(cm) { return cm.join(\"\").trim(); },\n      peg$c28 = \"{\",\n      peg$c29 = peg$literalExpectation(\"{\", false),\n      peg$c30 = \"}\",\n      peg$c31 = peg$literalExpectation(\"}\", false),\n      peg$c32 = function(vari, all, me) { var arr = (all ? all : []); arr.unshift(vari); return arr; },\n      peg$c33 = function(vari, all) { var arr = (all ? all : []); arr.unshift(vari); return arr; },\n      peg$c34 = \"(\",\n      peg$c35 = peg$literalExpectation(\"(\", false),\n      peg$c36 = \")\",\n      peg$c37 = peg$literalExpectation(\")\", false),\n      peg$c38 = \".\",\n      peg$c39 = peg$literalExpectation(\".\", false),\n      peg$c40 = function(num) { return num; },\n      peg$c41 = peg$otherExpectation(\"integer\"),\n      peg$c42 = /^[0-9]/,\n      peg$c43 = peg$classExpectation([[\"0\", \"9\"]], false, false),\n      peg$c44 = function(digits) { return makeInteger(digits); },\n      peg$c45 = \" \",\n      peg$c46 = peg$literalExpectation(\" \", false),\n      peg$c47 = function() { return '';},\n      peg$c48 = function(fig, disc, str, col, row, pr, ch) { var hm = {}; hm.fig = (fig ? fig : null); hm.disc =  (disc ? disc : null); hm.strike = (str ? str : null); hm.col = col; hm.row = row; hm.check = (ch ? ch : null); hm.promotion = pr; hm.notation = (fig ? fig : \"\") + (disc ? disc : \"\") + (str ? str : \"\") + col + row + (pr ? pr : \"\") + (ch ? ch : \"\"); return hm; },\n      peg$c49 = function(fig, cols, rows, str, col, row, pr, ch) { var hm = {}; hm.fig = (fig ? fig : null); hm.strike = (str =='x' ? str : null); hm.col = col; hm.row = row; hm.check = (ch ? ch : null); hm.notation = (fig && (fig!=='P') ? fig : \"\") + cols + rows + (str=='x' ? str : \"-\") + col  + row + (pr ? pr : \"\") + (ch ? ch : \"\"); hm.promotion = pr; return hm; },\n      peg$c50 = function(fig, str, col, row, pr, ch) { var hm = {}; hm.fig = (fig ? fig : null); hm.strike = (str ? str : null); hm.col = col; hm.row = row; hm.check = (ch ? ch : null); hm.notation = (fig ? fig : \"\") + (str ? str : \"\") + col  + row + (pr ? pr : \"\") + (ch ? ch : \"\"); hm.promotion = pr; return hm; },\n      peg$c51 = \"O-O-O\",\n      peg$c52 = peg$literalExpectation(\"O-O-O\", false),\n      peg$c53 = function(ch) { var hm = {}; hm.notation = 'O-O-O'+ (ch ? ch : \"\"); hm.check = (ch ? ch : null); return  hm; },\n      peg$c54 = \"O-O\",\n      peg$c55 = peg$literalExpectation(\"O-O\", false),\n      peg$c56 = function(ch) { var hm = {}; hm.notation = 'O-O'+ (ch ? ch : \"\"); hm.check = (ch ? ch : null); return  hm; },\n      peg$c57 = \"+-\",\n      peg$c58 = peg$literalExpectation(\"+-\", false),\n      peg$c59 = \"+\",\n      peg$c60 = peg$literalExpectation(\"+\", false),\n      peg$c61 = function(ch) { return ch[1]; },\n      peg$c62 = \"$$$\",\n      peg$c63 = peg$literalExpectation(\"$$$\", false),\n      peg$c64 = \"#\",\n      peg$c65 = peg$literalExpectation(\"#\", false),\n      peg$c66 = \"=\",\n      peg$c67 = peg$literalExpectation(\"=\", false),\n      peg$c68 = function(f) { return '=' + f; },\n      peg$c69 = function(nag, nags) { var arr = (nags ? nags : []); arr.unshift(nag); return arr; },\n      peg$c70 = \"$\",\n      peg$c71 = peg$literalExpectation(\"$\", false),\n      peg$c72 = function(num) { return '$' + num; },\n      peg$c73 = \"!!\",\n      peg$c74 = peg$literalExpectation(\"!!\", false),\n      peg$c75 = function() { return '$3'; },\n      peg$c76 = \"??\",\n      peg$c77 = peg$literalExpectation(\"??\", false),\n      peg$c78 = function() { return '$4'; },\n      peg$c79 = \"!?\",\n      peg$c80 = peg$literalExpectation(\"!?\", false),\n      peg$c81 = function() { return '$5'; },\n      peg$c82 = \"?!\",\n      peg$c83 = peg$literalExpectation(\"?!\", false),\n      peg$c84 = function() { return '$6'; },\n      peg$c85 = \"!\",\n      peg$c86 = peg$literalExpectation(\"!\", false),\n      peg$c87 = function() { return '$1'; },\n      peg$c88 = \"?\",\n      peg$c89 = peg$literalExpectation(\"?\", false),\n      peg$c90 = function() { return '$2'; },\n      peg$c91 = \"\\u203C\",\n      peg$c92 = peg$literalExpectation(\"\\u203C\", false),\n      peg$c93 = \"\\u2047\",\n      peg$c94 = peg$literalExpectation(\"\\u2047\", false),\n      peg$c95 = \"\\u2049\",\n      peg$c96 = peg$literalExpectation(\"\\u2049\", false),\n      peg$c97 = \"\\u2048\",\n      peg$c98 = peg$literalExpectation(\"\\u2048\", false),\n      peg$c99 = \"\\u25A1\",\n      peg$c100 = peg$literalExpectation(\"\\u25A1\", false),\n      peg$c101 = function() { return '$7'; },\n      peg$c102 = function() { return '$10'; },\n      peg$c103 = \"\\u221E\",\n      peg$c104 = peg$literalExpectation(\"\\u221E\", false),\n      peg$c105 = function() { return '$13'; },\n      peg$c106 = \"\\u2A72\",\n      peg$c107 = peg$literalExpectation(\"\\u2A72\", false),\n      peg$c108 = function() { return '$14'; },\n      peg$c109 = \"\\u2A71\",\n      peg$c110 = peg$literalExpectation(\"\\u2A71\", false),\n      peg$c111 = function() { return '$15';},\n      peg$c112 = \"\\xB1\",\n      peg$c113 = peg$literalExpectation(\"\\xB1\", false),\n      peg$c114 = function() { return '$16';},\n      peg$c115 = \"\\u2213\",\n      peg$c116 = peg$literalExpectation(\"\\u2213\", false),\n      peg$c117 = function() { return '$17';},\n      peg$c118 = function() { return '$18';},\n      peg$c119 = \"-+\",\n      peg$c120 = peg$literalExpectation(\"-+\", false),\n      peg$c121 = function() { return '$19';},\n      peg$c122 = \"\\u2A00\",\n      peg$c123 = peg$literalExpectation(\"\\u2A00\", false),\n      peg$c124 = function() { return '$22'; },\n      peg$c125 = \"\\u27F3\",\n      peg$c126 = peg$literalExpectation(\"\\u27F3\", false),\n      peg$c127 = function() { return '$32'; },\n      peg$c128 = \"\\u2192\",\n      peg$c129 = peg$literalExpectation(\"\\u2192\", false),\n      peg$c130 = function() { return '$36'; },\n      peg$c131 = \"\\u2191\",\n      peg$c132 = peg$literalExpectation(\"\\u2191\", false),\n      peg$c133 = function() { return '$40'; },\n      peg$c134 = \"\\u21C6\",\n      peg$c135 = peg$literalExpectation(\"\\u21C6\", false),\n      peg$c136 = function() { return '$132'; },\n      peg$c137 = \"D\",\n      peg$c138 = peg$literalExpectation(\"D\", false),\n      peg$c139 = function() { return '$220'; },\n      peg$c140 = /^[RNBQKP]/,\n      peg$c141 = peg$classExpectation([\"R\", \"N\", \"B\", \"Q\", \"K\", \"P\"], false, false),\n      peg$c142 = /^[a-h]/,\n      peg$c143 = peg$classExpectation([[\"a\", \"h\"]], false, false),\n      peg$c144 = /^[1-8]/,\n      peg$c145 = peg$classExpectation([[\"1\", \"8\"]], false, false),\n      peg$c146 = \"x\",\n      peg$c147 = peg$literalExpectation(\"x\", false),\n      peg$c148 = \"-\",\n      peg$c149 = peg$literalExpectation(\"-\", false),\n\n      peg$currPos          = 0,\n      peg$savedPos         = 0,\n      peg$posDetailsCache  = [{ line: 1, column: 1 }],\n      peg$maxFailPos       = 0,\n      peg$maxFailExpected  = [],\n      peg$silentFails      = 0,\n\n      peg$result;\n\n  if (\"startRule\" in options) {\n    if (!(options.startRule in peg$startRuleFunctions)) {\n      throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n    }\n\n    peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n  }\n\n  function text() {\n    return input.substring(peg$savedPos, peg$currPos);\n  }\n\n  function location() {\n    return peg$computeLocation(peg$savedPos, peg$currPos);\n  }\n\n  function expected(description, location) {\n    location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n    throw peg$buildStructuredError(\n      [peg$otherExpectation(description)],\n      input.substring(peg$savedPos, peg$currPos),\n      location\n    );\n  }\n\n  function error(message, location) {\n    location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n    throw peg$buildSimpleError(message, location);\n  }\n\n  function peg$literalExpectation(text, ignoreCase) {\n    return { type: \"literal\", text: text, ignoreCase: ignoreCase };\n  }\n\n  function peg$classExpectation(parts, inverted, ignoreCase) {\n    return { type: \"class\", parts: parts, inverted: inverted, ignoreCase: ignoreCase };\n  }\n\n  function peg$anyExpectation() {\n    return { type: \"any\" };\n  }\n\n  function peg$endExpectation() {\n    return { type: \"end\" };\n  }\n\n  function peg$otherExpectation(description) {\n    return { type: \"other\", description: description };\n  }\n\n  function peg$computePosDetails(pos) {\n    var details = peg$posDetailsCache[pos], p;\n\n    if (details) {\n      return details;\n    } else {\n      p = pos - 1;\n      while (!peg$posDetailsCache[p]) {\n        p--;\n      }\n\n      details = peg$posDetailsCache[p];\n      details = {\n        line:   details.line,\n        column: details.column\n      };\n\n      while (p < pos) {\n        if (input.charCodeAt(p) === 10) {\n          details.line++;\n          details.column = 1;\n        } else {\n          details.column++;\n        }\n\n        p++;\n      }\n\n      peg$posDetailsCache[pos] = details;\n      return details;\n    }\n  }\n\n  function peg$computeLocation(startPos, endPos) {\n    var startPosDetails = peg$computePosDetails(startPos),\n        endPosDetails   = peg$computePosDetails(endPos);\n\n    return {\n      start: {\n        offset: startPos,\n        line:   startPosDetails.line,\n        column: startPosDetails.column\n      },\n      end: {\n        offset: endPos,\n        line:   endPosDetails.line,\n        column: endPosDetails.column\n      }\n    };\n  }\n\n  function peg$fail(expected) {\n    if (peg$currPos < peg$maxFailPos) { return; }\n\n    if (peg$currPos > peg$maxFailPos) {\n      peg$maxFailPos = peg$currPos;\n      peg$maxFailExpected = [];\n    }\n\n    peg$maxFailExpected.push(expected);\n  }\n\n  function peg$buildSimpleError(message, location) {\n    return new peg$SyntaxError(message, null, null, location);\n  }\n\n  function peg$buildStructuredError(expected, found, location) {\n    return new peg$SyntaxError(\n      peg$SyntaxError.buildMessage(expected, found),\n      expected,\n      found,\n      location\n    );\n  }\n\n  function peg$parsepgn() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = peg$parsepgnStartWhite();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsepgnBlack();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c0(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parsepgnStartBlack();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsepgnWhite();\n        if (s2 === peg$FAILED) {\n          s2 = null;\n        }\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c1(s1, s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parsewhiteSpace();\n        if (s1 === peg$FAILED) {\n          s1 = null;\n        }\n        if (s1 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c2();\n        }\n        s0 = s1;\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsepgnStartWhite() {\n    var s0, s1;\n\n    s0 = peg$currPos;\n    s1 = peg$parsepgnWhite();\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c3(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parsepgnStartBlack() {\n    var s0, s1;\n\n    s0 = peg$currPos;\n    s1 = peg$parsepgnBlack();\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c4(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parsepgnWhite() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15;\n\n    s0 = peg$currPos;\n    s1 = peg$parsewhiteSpace();\n    if (s1 === peg$FAILED) {\n      s1 = null;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsecomment();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsewhiteSpace();\n        if (s3 === peg$FAILED) {\n          s3 = null;\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsemoveNumber();\n          if (s4 === peg$FAILED) {\n            s4 = null;\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parsewhiteSpace();\n            if (s5 === peg$FAILED) {\n              s5 = null;\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parsecomment();\n              if (s6 === peg$FAILED) {\n                s6 = null;\n              }\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parsewhiteSpace();\n                if (s7 === peg$FAILED) {\n                  s7 = null;\n                }\n                if (s7 !== peg$FAILED) {\n                  s8 = peg$parsehalfMove();\n                  if (s8 !== peg$FAILED) {\n                    s9 = peg$parsewhiteSpace();\n                    if (s9 === peg$FAILED) {\n                      s9 = null;\n                    }\n                    if (s9 !== peg$FAILED) {\n                      s10 = peg$parsenags();\n                      if (s10 === peg$FAILED) {\n                        s10 = null;\n                      }\n                      if (s10 !== peg$FAILED) {\n                        s11 = peg$parsewhiteSpace();\n                        if (s11 === peg$FAILED) {\n                          s11 = null;\n                        }\n                        if (s11 !== peg$FAILED) {\n                          s12 = peg$parsecomment();\n                          if (s12 === peg$FAILED) {\n                            s12 = null;\n                          }\n                          if (s12 !== peg$FAILED) {\n                            s13 = peg$parsewhiteSpace();\n                            if (s13 === peg$FAILED) {\n                              s13 = null;\n                            }\n                            if (s13 !== peg$FAILED) {\n                              s14 = peg$parsevariationWhite();\n                              if (s14 === peg$FAILED) {\n                                s14 = null;\n                              }\n                              if (s14 !== peg$FAILED) {\n                                s15 = peg$parsepgnBlack();\n                                if (s15 === peg$FAILED) {\n                                  s15 = null;\n                                }\n                                if (s15 !== peg$FAILED) {\n                                  peg$savedPos = s0;\n                                  s1 = peg$c5(s2, s4, s6, s8, s10, s12, s14, s15);\n                                  s0 = s1;\n                                } else {\n                                  peg$currPos = s0;\n                                  s0 = peg$FAILED;\n                                }\n                              } else {\n                                peg$currPos = s0;\n                                s0 = peg$FAILED;\n                              }\n                            } else {\n                              peg$currPos = s0;\n                              s0 = peg$FAILED;\n                            }\n                          } else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                          }\n                        } else {\n                          peg$currPos = s0;\n                          s0 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseendGame();\n    }\n\n    return s0;\n  }\n\n  function peg$parsepgnBlack() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15;\n\n    s0 = peg$currPos;\n    s1 = peg$parsewhiteSpace();\n    if (s1 === peg$FAILED) {\n      s1 = null;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsecomment();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsewhiteSpace();\n        if (s3 === peg$FAILED) {\n          s3 = null;\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsemoveEllipse();\n          if (s4 === peg$FAILED) {\n            s4 = null;\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parsewhiteSpace();\n            if (s5 === peg$FAILED) {\n              s5 = null;\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parsecomment();\n              if (s6 === peg$FAILED) {\n                s6 = null;\n              }\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parsewhiteSpace();\n                if (s7 === peg$FAILED) {\n                  s7 = null;\n                }\n                if (s7 !== peg$FAILED) {\n                  s8 = peg$parsehalfMove();\n                  if (s8 !== peg$FAILED) {\n                    s9 = peg$parsewhiteSpace();\n                    if (s9 === peg$FAILED) {\n                      s9 = null;\n                    }\n                    if (s9 !== peg$FAILED) {\n                      s10 = peg$parsenags();\n                      if (s10 === peg$FAILED) {\n                        s10 = null;\n                      }\n                      if (s10 !== peg$FAILED) {\n                        s11 = peg$parsewhiteSpace();\n                        if (s11 === peg$FAILED) {\n                          s11 = null;\n                        }\n                        if (s11 !== peg$FAILED) {\n                          s12 = peg$parsecomment();\n                          if (s12 === peg$FAILED) {\n                            s12 = null;\n                          }\n                          if (s12 !== peg$FAILED) {\n                            s13 = peg$parsewhiteSpace();\n                            if (s13 === peg$FAILED) {\n                              s13 = null;\n                            }\n                            if (s13 !== peg$FAILED) {\n                              s14 = peg$parsevariationBlack();\n                              if (s14 === peg$FAILED) {\n                                s14 = null;\n                              }\n                              if (s14 !== peg$FAILED) {\n                                s15 = peg$parsepgnWhite();\n                                if (s15 === peg$FAILED) {\n                                  s15 = null;\n                                }\n                                if (s15 !== peg$FAILED) {\n                                  peg$savedPos = s0;\n                                  s1 = peg$c6(s2, s4, s6, s8, s10, s12, s14, s15);\n                                  s0 = s1;\n                                } else {\n                                  peg$currPos = s0;\n                                  s0 = peg$FAILED;\n                                }\n                              } else {\n                                peg$currPos = s0;\n                                s0 = peg$FAILED;\n                              }\n                            } else {\n                              peg$currPos = s0;\n                              s0 = peg$FAILED;\n                            }\n                          } else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                          }\n                        } else {\n                          peg$currPos = s0;\n                          s0 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseendGame();\n    }\n\n    return s0;\n  }\n\n  function peg$parseendGame() {\n    var s0, s1;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 3) === peg$c7) {\n      s1 = peg$c7;\n      peg$currPos += 3;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c8); }\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c9();\n    }\n    s0 = s1;\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 3) === peg$c10) {\n        s1 = peg$c10;\n        peg$currPos += 3;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c11); }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c12();\n      }\n      s0 = s1;\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.substr(peg$currPos, 3) === peg$c13) {\n          s1 = peg$c13;\n          peg$currPos += 3;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c14); }\n        }\n        if (s1 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c15();\n        }\n        s0 = s1;\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          if (input.substr(peg$currPos, 3) === peg$c16) {\n            s1 = peg$c16;\n            peg$currPos += 3;\n          } else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c17); }\n          }\n          if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c18();\n          }\n          s0 = s1;\n          if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            if (input.substr(peg$currPos, 7) === peg$c19) {\n              s1 = peg$c19;\n              peg$currPos += 7;\n            } else {\n              s1 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c20); }\n            }\n            if (s1 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c21();\n            }\n            s0 = s1;\n            if (s0 === peg$FAILED) {\n              s0 = peg$currPos;\n              if (input.charCodeAt(peg$currPos) === 42) {\n                s1 = peg$c22;\n                peg$currPos++;\n              } else {\n                s1 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c23); }\n              }\n              if (s1 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c24();\n              }\n              s0 = s1;\n            }\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsecomment() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parsecl();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      if (peg$c25.test(input.charAt(peg$currPos))) {\n        s3 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c26); }\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        if (peg$c25.test(input.charAt(peg$currPos))) {\n          s3 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c26); }\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsecr();\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c27(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsecl() {\n    var s0;\n\n    if (input.charCodeAt(peg$currPos) === 123) {\n      s0 = peg$c28;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c29); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsecr() {\n    var s0;\n\n    if (input.charCodeAt(peg$currPos) === 125) {\n      s0 = peg$c30;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c31); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsevariationWhite() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    s0 = peg$currPos;\n    s1 = peg$parsepl();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsepgnWhite();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsepr();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsewhiteSpace();\n          if (s4 === peg$FAILED) {\n            s4 = null;\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parsevariationWhite();\n            if (s5 === peg$FAILED) {\n              s5 = null;\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parsewhiteSpace();\n              if (s6 === peg$FAILED) {\n                s6 = null;\n              }\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parsemoveEllipse();\n                if (s7 === peg$FAILED) {\n                  s7 = null;\n                }\n                if (s7 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c32(s2, s5, s7);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsevariationBlack() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    s1 = peg$parsepl();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsepgnStartBlack();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsepr();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsewhiteSpace();\n          if (s4 === peg$FAILED) {\n            s4 = null;\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parsevariationBlack();\n            if (s5 === peg$FAILED) {\n              s5 = null;\n            }\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c33(s2, s5);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsepl() {\n    var s0;\n\n    if (input.charCodeAt(peg$currPos) === 40) {\n      s0 = peg$c34;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c35); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsepr() {\n    var s0;\n\n    if (input.charCodeAt(peg$currPos) === 41) {\n      s0 = peg$c36;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c37); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsemoveNumber() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = peg$parseinteger();\n    if (s1 !== peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 46) {\n        s2 = peg$c38;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c39); }\n      }\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c40(s1);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseinteger() {\n    var s0, s1, s2;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = [];\n    if (peg$c42.test(input.charAt(peg$currPos))) {\n      s2 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c43); }\n    }\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        if (peg$c42.test(input.charAt(peg$currPos))) {\n          s2 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c43); }\n        }\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c44(s1);\n    }\n    s0 = s1;\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c41); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsewhiteSpace() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = [];\n    if (input.charCodeAt(peg$currPos) === 32) {\n      s2 = peg$c45;\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c46); }\n    }\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        if (input.charCodeAt(peg$currPos) === 32) {\n          s2 = peg$c45;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c46); }\n        }\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c47();\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parsehalfMove() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n\n    s0 = peg$currPos;\n    s1 = peg$parsefigure();\n    if (s1 === peg$FAILED) {\n      s1 = null;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      peg$silentFails++;\n      s3 = peg$parsecheckdisc();\n      peg$silentFails--;\n      if (s3 !== peg$FAILED) {\n        peg$currPos = s2;\n        s2 = void 0;\n      } else {\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsediscriminator();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsestrike();\n          if (s4 === peg$FAILED) {\n            s4 = null;\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parsecolumn();\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parserow();\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parsepromotion();\n                if (s7 === peg$FAILED) {\n                  s7 = null;\n                }\n                if (s7 !== peg$FAILED) {\n                  s8 = peg$parsecheck();\n                  if (s8 === peg$FAILED) {\n                    s8 = null;\n                  }\n                  if (s8 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c48(s1, s3, s4, s5, s6, s7, s8);\n                    s0 = s1;\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parsefigure();\n      if (s1 === peg$FAILED) {\n        s1 = null;\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsecolumn();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parserow();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parsestrikeOrDash();\n            if (s4 === peg$FAILED) {\n              s4 = null;\n            }\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parsecolumn();\n              if (s5 !== peg$FAILED) {\n                s6 = peg$parserow();\n                if (s6 !== peg$FAILED) {\n                  s7 = peg$parsepromotion();\n                  if (s7 === peg$FAILED) {\n                    s7 = null;\n                  }\n                  if (s7 !== peg$FAILED) {\n                    s8 = peg$parsecheck();\n                    if (s8 === peg$FAILED) {\n                      s8 = null;\n                    }\n                    if (s8 !== peg$FAILED) {\n                      peg$savedPos = s0;\n                      s1 = peg$c49(s1, s2, s3, s4, s5, s6, s7, s8);\n                      s0 = s1;\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parsefigure();\n        if (s1 === peg$FAILED) {\n          s1 = null;\n        }\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parsestrike();\n          if (s2 === peg$FAILED) {\n            s2 = null;\n          }\n          if (s2 !== peg$FAILED) {\n            s3 = peg$parsecolumn();\n            if (s3 !== peg$FAILED) {\n              s4 = peg$parserow();\n              if (s4 !== peg$FAILED) {\n                s5 = peg$parsepromotion();\n                if (s5 === peg$FAILED) {\n                  s5 = null;\n                }\n                if (s5 !== peg$FAILED) {\n                  s6 = peg$parsecheck();\n                  if (s6 === peg$FAILED) {\n                    s6 = null;\n                  }\n                  if (s6 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c50(s1, s2, s3, s4, s5, s6);\n                    s0 = s1;\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          if (input.substr(peg$currPos, 5) === peg$c51) {\n            s1 = peg$c51;\n            peg$currPos += 5;\n          } else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c52); }\n          }\n          if (s1 !== peg$FAILED) {\n            s2 = peg$parsecheck();\n            if (s2 === peg$FAILED) {\n              s2 = null;\n            }\n            if (s2 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c53(s2);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n          if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            if (input.substr(peg$currPos, 3) === peg$c54) {\n              s1 = peg$c54;\n              peg$currPos += 3;\n            } else {\n              s1 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c55); }\n            }\n            if (s1 !== peg$FAILED) {\n              s2 = peg$parsecheck();\n              if (s2 === peg$FAILED) {\n                s2 = null;\n              }\n              if (s2 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c56(s2);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsecheck() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    s2 = peg$currPos;\n    peg$silentFails++;\n    if (input.substr(peg$currPos, 2) === peg$c57) {\n      s3 = peg$c57;\n      peg$currPos += 2;\n    } else {\n      s3 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c58); }\n    }\n    peg$silentFails--;\n    if (s3 === peg$FAILED) {\n      s2 = void 0;\n    } else {\n      peg$currPos = s2;\n      s2 = peg$FAILED;\n    }\n    if (s2 !== peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 43) {\n        s3 = peg$c59;\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c60); }\n      }\n      if (s3 !== peg$FAILED) {\n        s2 = [s2, s3];\n        s1 = s2;\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c61(s1);\n    }\n    s0 = s1;\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$currPos;\n      s2 = peg$currPos;\n      peg$silentFails++;\n      if (input.substr(peg$currPos, 3) === peg$c62) {\n        s3 = peg$c62;\n        peg$currPos += 3;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c63); }\n      }\n      peg$silentFails--;\n      if (s3 === peg$FAILED) {\n        s2 = void 0;\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 35) {\n          s3 = peg$c64;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c65); }\n        }\n        if (s3 !== peg$FAILED) {\n          s2 = [s2, s3];\n          s1 = s2;\n        } else {\n          peg$currPos = s1;\n          s1 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c61(s1);\n      }\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parsepromotion() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 61) {\n      s1 = peg$c66;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c67); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsefigure();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c68(s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsenags() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parsenag();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsewhiteSpace();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsenags();\n        if (s3 === peg$FAILED) {\n          s3 = null;\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c69(s1, s3);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsenag() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 36) {\n      s1 = peg$c70;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c71); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseinteger();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c72(s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 2) === peg$c73) {\n        s1 = peg$c73;\n        peg$currPos += 2;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c74); }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c75();\n      }\n      s0 = s1;\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.substr(peg$currPos, 2) === peg$c76) {\n          s1 = peg$c76;\n          peg$currPos += 2;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c77); }\n        }\n        if (s1 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c78();\n        }\n        s0 = s1;\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          if (input.substr(peg$currPos, 2) === peg$c79) {\n            s1 = peg$c79;\n            peg$currPos += 2;\n          } else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c80); }\n          }\n          if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c81();\n          }\n          s0 = s1;\n          if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            if (input.substr(peg$currPos, 2) === peg$c82) {\n              s1 = peg$c82;\n              peg$currPos += 2;\n            } else {\n              s1 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c83); }\n            }\n            if (s1 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c84();\n            }\n            s0 = s1;\n            if (s0 === peg$FAILED) {\n              s0 = peg$currPos;\n              if (input.charCodeAt(peg$currPos) === 33) {\n                s1 = peg$c85;\n                peg$currPos++;\n              } else {\n                s1 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c86); }\n              }\n              if (s1 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c87();\n              }\n              s0 = s1;\n              if (s0 === peg$FAILED) {\n                s0 = peg$currPos;\n                if (input.charCodeAt(peg$currPos) === 63) {\n                  s1 = peg$c88;\n                  peg$currPos++;\n                } else {\n                  s1 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c89); }\n                }\n                if (s1 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c90();\n                }\n                s0 = s1;\n                if (s0 === peg$FAILED) {\n                  s0 = peg$currPos;\n                  if (input.charCodeAt(peg$currPos) === 8252) {\n                    s1 = peg$c91;\n                    peg$currPos++;\n                  } else {\n                    s1 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c92); }\n                  }\n                  if (s1 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c75();\n                  }\n                  s0 = s1;\n                  if (s0 === peg$FAILED) {\n                    s0 = peg$currPos;\n                    if (input.charCodeAt(peg$currPos) === 8263) {\n                      s1 = peg$c93;\n                      peg$currPos++;\n                    } else {\n                      s1 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c94); }\n                    }\n                    if (s1 !== peg$FAILED) {\n                      peg$savedPos = s0;\n                      s1 = peg$c78();\n                    }\n                    s0 = s1;\n                    if (s0 === peg$FAILED) {\n                      s0 = peg$currPos;\n                      if (input.charCodeAt(peg$currPos) === 8265) {\n                        s1 = peg$c95;\n                        peg$currPos++;\n                      } else {\n                        s1 = peg$FAILED;\n                        if (peg$silentFails === 0) { peg$fail(peg$c96); }\n                      }\n                      if (s1 !== peg$FAILED) {\n                        peg$savedPos = s0;\n                        s1 = peg$c81();\n                      }\n                      s0 = s1;\n                      if (s0 === peg$FAILED) {\n                        s0 = peg$currPos;\n                        if (input.charCodeAt(peg$currPos) === 8264) {\n                          s1 = peg$c97;\n                          peg$currPos++;\n                        } else {\n                          s1 = peg$FAILED;\n                          if (peg$silentFails === 0) { peg$fail(peg$c98); }\n                        }\n                        if (s1 !== peg$FAILED) {\n                          peg$savedPos = s0;\n                          s1 = peg$c84();\n                        }\n                        s0 = s1;\n                        if (s0 === peg$FAILED) {\n                          s0 = peg$currPos;\n                          if (input.charCodeAt(peg$currPos) === 9633) {\n                            s1 = peg$c99;\n                            peg$currPos++;\n                          } else {\n                            s1 = peg$FAILED;\n                            if (peg$silentFails === 0) { peg$fail(peg$c100); }\n                          }\n                          if (s1 !== peg$FAILED) {\n                            peg$savedPos = s0;\n                            s1 = peg$c101();\n                          }\n                          s0 = s1;\n                          if (s0 === peg$FAILED) {\n                            s0 = peg$currPos;\n                            if (input.charCodeAt(peg$currPos) === 61) {\n                              s1 = peg$c66;\n                              peg$currPos++;\n                            } else {\n                              s1 = peg$FAILED;\n                              if (peg$silentFails === 0) { peg$fail(peg$c67); }\n                            }\n                            if (s1 !== peg$FAILED) {\n                              peg$savedPos = s0;\n                              s1 = peg$c102();\n                            }\n                            s0 = s1;\n                            if (s0 === peg$FAILED) {\n                              s0 = peg$currPos;\n                              if (input.charCodeAt(peg$currPos) === 8734) {\n                                s1 = peg$c103;\n                                peg$currPos++;\n                              } else {\n                                s1 = peg$FAILED;\n                                if (peg$silentFails === 0) { peg$fail(peg$c104); }\n                              }\n                              if (s1 !== peg$FAILED) {\n                                peg$savedPos = s0;\n                                s1 = peg$c105();\n                              }\n                              s0 = s1;\n                              if (s0 === peg$FAILED) {\n                                s0 = peg$currPos;\n                                if (input.charCodeAt(peg$currPos) === 10866) {\n                                  s1 = peg$c106;\n                                  peg$currPos++;\n                                } else {\n                                  s1 = peg$FAILED;\n                                  if (peg$silentFails === 0) { peg$fail(peg$c107); }\n                                }\n                                if (s1 !== peg$FAILED) {\n                                  peg$savedPos = s0;\n                                  s1 = peg$c108();\n                                }\n                                s0 = s1;\n                                if (s0 === peg$FAILED) {\n                                  s0 = peg$currPos;\n                                  if (input.charCodeAt(peg$currPos) === 10865) {\n                                    s1 = peg$c109;\n                                    peg$currPos++;\n                                  } else {\n                                    s1 = peg$FAILED;\n                                    if (peg$silentFails === 0) { peg$fail(peg$c110); }\n                                  }\n                                  if (s1 !== peg$FAILED) {\n                                    peg$savedPos = s0;\n                                    s1 = peg$c111();\n                                  }\n                                  s0 = s1;\n                                  if (s0 === peg$FAILED) {\n                                    s0 = peg$currPos;\n                                    if (input.charCodeAt(peg$currPos) === 177) {\n                                      s1 = peg$c112;\n                                      peg$currPos++;\n                                    } else {\n                                      s1 = peg$FAILED;\n                                      if (peg$silentFails === 0) { peg$fail(peg$c113); }\n                                    }\n                                    if (s1 !== peg$FAILED) {\n                                      peg$savedPos = s0;\n                                      s1 = peg$c114();\n                                    }\n                                    s0 = s1;\n                                    if (s0 === peg$FAILED) {\n                                      s0 = peg$currPos;\n                                      if (input.charCodeAt(peg$currPos) === 8723) {\n                                        s1 = peg$c115;\n                                        peg$currPos++;\n                                      } else {\n                                        s1 = peg$FAILED;\n                                        if (peg$silentFails === 0) { peg$fail(peg$c116); }\n                                      }\n                                      if (s1 !== peg$FAILED) {\n                                        peg$savedPos = s0;\n                                        s1 = peg$c117();\n                                      }\n                                      s0 = s1;\n                                      if (s0 === peg$FAILED) {\n                                        s0 = peg$currPos;\n                                        if (input.substr(peg$currPos, 2) === peg$c57) {\n                                          s1 = peg$c57;\n                                          peg$currPos += 2;\n                                        } else {\n                                          s1 = peg$FAILED;\n                                          if (peg$silentFails === 0) { peg$fail(peg$c58); }\n                                        }\n                                        if (s1 !== peg$FAILED) {\n                                          peg$savedPos = s0;\n                                          s1 = peg$c118();\n                                        }\n                                        s0 = s1;\n                                        if (s0 === peg$FAILED) {\n                                          s0 = peg$currPos;\n                                          if (input.substr(peg$currPos, 2) === peg$c119) {\n                                            s1 = peg$c119;\n                                            peg$currPos += 2;\n                                          } else {\n                                            s1 = peg$FAILED;\n                                            if (peg$silentFails === 0) { peg$fail(peg$c120); }\n                                          }\n                                          if (s1 !== peg$FAILED) {\n                                            peg$savedPos = s0;\n                                            s1 = peg$c121();\n                                          }\n                                          s0 = s1;\n                                          if (s0 === peg$FAILED) {\n                                            s0 = peg$currPos;\n                                            if (input.charCodeAt(peg$currPos) === 10752) {\n                                              s1 = peg$c122;\n                                              peg$currPos++;\n                                            } else {\n                                              s1 = peg$FAILED;\n                                              if (peg$silentFails === 0) { peg$fail(peg$c123); }\n                                            }\n                                            if (s1 !== peg$FAILED) {\n                                              peg$savedPos = s0;\n                                              s1 = peg$c124();\n                                            }\n                                            s0 = s1;\n                                            if (s0 === peg$FAILED) {\n                                              s0 = peg$currPos;\n                                              if (input.charCodeAt(peg$currPos) === 10227) {\n                                                s1 = peg$c125;\n                                                peg$currPos++;\n                                              } else {\n                                                s1 = peg$FAILED;\n                                                if (peg$silentFails === 0) { peg$fail(peg$c126); }\n                                              }\n                                              if (s1 !== peg$FAILED) {\n                                                peg$savedPos = s0;\n                                                s1 = peg$c127();\n                                              }\n                                              s0 = s1;\n                                              if (s0 === peg$FAILED) {\n                                                s0 = peg$currPos;\n                                                if (input.charCodeAt(peg$currPos) === 8594) {\n                                                  s1 = peg$c128;\n                                                  peg$currPos++;\n                                                } else {\n                                                  s1 = peg$FAILED;\n                                                  if (peg$silentFails === 0) { peg$fail(peg$c129); }\n                                                }\n                                                if (s1 !== peg$FAILED) {\n                                                  peg$savedPos = s0;\n                                                  s1 = peg$c130();\n                                                }\n                                                s0 = s1;\n                                                if (s0 === peg$FAILED) {\n                                                  s0 = peg$currPos;\n                                                  if (input.charCodeAt(peg$currPos) === 8593) {\n                                                    s1 = peg$c131;\n                                                    peg$currPos++;\n                                                  } else {\n                                                    s1 = peg$FAILED;\n                                                    if (peg$silentFails === 0) { peg$fail(peg$c132); }\n                                                  }\n                                                  if (s1 !== peg$FAILED) {\n                                                    peg$savedPos = s0;\n                                                    s1 = peg$c133();\n                                                  }\n                                                  s0 = s1;\n                                                  if (s0 === peg$FAILED) {\n                                                    s0 = peg$currPos;\n                                                    if (input.charCodeAt(peg$currPos) === 8646) {\n                                                      s1 = peg$c134;\n                                                      peg$currPos++;\n                                                    } else {\n                                                      s1 = peg$FAILED;\n                                                      if (peg$silentFails === 0) { peg$fail(peg$c135); }\n                                                    }\n                                                    if (s1 !== peg$FAILED) {\n                                                      peg$savedPos = s0;\n                                                      s1 = peg$c136();\n                                                    }\n                                                    s0 = s1;\n                                                    if (s0 === peg$FAILED) {\n                                                      s0 = peg$currPos;\n                                                      if (input.charCodeAt(peg$currPos) === 68) {\n                                                        s1 = peg$c137;\n                                                        peg$currPos++;\n                                                      } else {\n                                                        s1 = peg$FAILED;\n                                                        if (peg$silentFails === 0) { peg$fail(peg$c138); }\n                                                      }\n                                                      if (s1 !== peg$FAILED) {\n                                                        peg$savedPos = s0;\n                                                        s1 = peg$c139();\n                                                      }\n                                                      s0 = s1;\n                                                    }\n                                                  }\n                                                }\n                                              }\n                                            }\n                                          }\n                                        }\n                                      }\n                                    }\n                                  }\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsediscriminator() {\n    var s0;\n\n    s0 = peg$parsecolumn();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parserow();\n    }\n\n    return s0;\n  }\n\n  function peg$parsecheckdisc() {\n    var s0, s1, s2, s3, s4;\n\n    s0 = peg$currPos;\n    s1 = peg$parsediscriminator();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsestrike();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsecolumn();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parserow();\n          if (s4 !== peg$FAILED) {\n            s1 = [s1, s2, s3, s4];\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsemoveEllipse() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parseinteger();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      if (input.charCodeAt(peg$currPos) === 46) {\n        s3 = peg$c38;\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c39); }\n      }\n      if (s3 !== peg$FAILED) {\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          if (input.charCodeAt(peg$currPos) === 46) {\n            s3 = peg$c38;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c39); }\n          }\n        }\n      } else {\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c40(s1);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsefigure() {\n    var s0;\n\n    if (peg$c140.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c141); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsecolumn() {\n    var s0;\n\n    if (peg$c142.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c143); }\n    }\n\n    return s0;\n  }\n\n  function peg$parserow() {\n    var s0;\n\n    if (peg$c144.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c145); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsestrike() {\n    var s0;\n\n    if (input.charCodeAt(peg$currPos) === 120) {\n      s0 = peg$c146;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c147); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsestrikeOrDash() {\n    var s0;\n\n    if (input.charCodeAt(peg$currPos) === 120) {\n      s0 = peg$c146;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c147); }\n    }\n    if (s0 === peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 45) {\n        s0 = peg$c148;\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c149); }\n      }\n    }\n\n    return s0;\n  }\n\n\n      function makeInteger(o) {\n          return parseInt(o.join(\"\"), 10);\n      }\n\n\n  peg$result = peg$startRuleFunction();\n\n  if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n    return peg$result;\n  } else {\n    if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n      peg$fail(peg$endExpectation());\n    }\n\n    throw peg$buildStructuredError(\n      peg$maxFailExpected,\n      peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null,\n      peg$maxFailPos < input.length\n        ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)\n        : peg$computeLocation(peg$maxFailPos, peg$maxFailPos)\n    );\n  }\n}\n/*\nmodule.exports = {\n  SyntaxError: peg$SyntaxError,\n  parse:       peg$parse\n};\n*/\nexport class pgnParser {\n  static parse(history, options) {\n    return peg$parse(history, options)\n  }\n}","/*\n * Copyright (c) 2020, Jeff Hlywa (jhlywa@gmail.com)\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *----------------------------------------------------------------------------*/\n\n/* minified license below  */\n\n/* @license\n * Copyright (c) 2018, Jeff Hlywa (jhlywa@gmail.com)\n * Released under the BSD license\n * https://github.com/jhlywa/chess.js/blob/master/LICENSE\n */\n\nvar Chess = function(fen) {\n    var BLACK = 'b'\n    var WHITE = 'w'\n\n    var EMPTY = -1\n\n    var PAWN = 'p'\n    var KNIGHT = 'n'\n    var BISHOP = 'b'\n    var ROOK = 'r'\n    var QUEEN = 'q'\n    var KING = 'k'\n\n    var SYMBOLS = 'pnbrqkPNBRQK'\n\n    var DEFAULT_POSITION =\n        'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1'\n\n    var POSSIBLE_RESULTS = ['1-0', '0-1', '1/2-1/2', '*']\n\n    var PAWN_OFFSETS = {\n        b: [16, 32, 17, 15],\n        w: [-16, -32, -17, -15]\n    }\n\n    var PIECE_OFFSETS = {\n        n: [-18, -33, -31, -14, 18, 33, 31, 14],\n        b: [-17, -15, 17, 15],\n        r: [-16, 1, 16, -1],\n        q: [-17, -16, -15, 1, 17, 16, 15, -1],\n        k: [-17, -16, -15, 1, 17, 16, 15, -1]\n    }\n\n    // prettier-ignore\n    var ATTACKS = [\n        20, 0, 0, 0, 0, 0, 0, 24,  0, 0, 0, 0, 0, 0,20, 0,\n        0,20, 0, 0, 0, 0, 0, 24,  0, 0, 0, 0, 0,20, 0, 0,\n        0, 0,20, 0, 0, 0, 0, 24,  0, 0, 0, 0,20, 0, 0, 0,\n        0, 0, 0,20, 0, 0, 0, 24,  0, 0, 0,20, 0, 0, 0, 0,\n        0, 0, 0, 0,20, 0, 0, 24,  0, 0,20, 0, 0, 0, 0, 0,\n        0, 0, 0, 0, 0,20, 2, 24,  2,20, 0, 0, 0, 0, 0, 0,\n        0, 0, 0, 0, 0, 2,53, 56, 53, 2, 0, 0, 0, 0, 0, 0,\n        24,24,24,24,24,24,56,  0, 56,24,24,24,24,24,24, 0,\n        0, 0, 0, 0, 0, 2,53, 56, 53, 2, 0, 0, 0, 0, 0, 0,\n        0, 0, 0, 0, 0,20, 2, 24,  2,20, 0, 0, 0, 0, 0, 0,\n        0, 0, 0, 0,20, 0, 0, 24,  0, 0,20, 0, 0, 0, 0, 0,\n        0, 0, 0,20, 0, 0, 0, 24,  0, 0, 0,20, 0, 0, 0, 0,\n        0, 0,20, 0, 0, 0, 0, 24,  0, 0, 0, 0,20, 0, 0, 0,\n        0,20, 0, 0, 0, 0, 0, 24,  0, 0, 0, 0, 0,20, 0, 0,\n        20, 0, 0, 0, 0, 0, 0, 24,  0, 0, 0, 0, 0, 0,20\n    ];\n\n    // prettier-ignore\n    var RAYS = [\n        17,  0,  0,  0,  0,  0,  0, 16,  0,  0,  0,  0,  0,  0, 15, 0,\n        0, 17,  0,  0,  0,  0,  0, 16,  0,  0,  0,  0,  0, 15,  0, 0,\n        0,  0, 17,  0,  0,  0,  0, 16,  0,  0,  0,  0, 15,  0,  0, 0,\n        0,  0,  0, 17,  0,  0,  0, 16,  0,  0,  0, 15,  0,  0,  0, 0,\n        0,  0,  0,  0, 17,  0,  0, 16,  0,  0, 15,  0,  0,  0,  0, 0,\n        0,  0,  0,  0,  0, 17,  0, 16,  0, 15,  0,  0,  0,  0,  0, 0,\n        0,  0,  0,  0,  0,  0, 17, 16, 15,  0,  0,  0,  0,  0,  0, 0,\n        1,  1,  1,  1,  1,  1,  1,  0, -1, -1,  -1,-1, -1, -1, -1, 0,\n        0,  0,  0,  0,  0,  0,-15,-16,-17,  0,  0,  0,  0,  0,  0, 0,\n        0,  0,  0,  0,  0,-15,  0,-16,  0,-17,  0,  0,  0,  0,  0, 0,\n        0,  0,  0,  0,-15,  0,  0,-16,  0,  0,-17,  0,  0,  0,  0, 0,\n        0,  0,  0,-15,  0,  0,  0,-16,  0,  0,  0,-17,  0,  0,  0, 0,\n        0,  0,-15,  0,  0,  0,  0,-16,  0,  0,  0,  0,-17,  0,  0, 0,\n        0,-15,  0,  0,  0,  0,  0,-16,  0,  0,  0,  0,  0,-17,  0, 0,\n        -15,  0,  0,  0,  0,  0,  0,-16,  0,  0,  0,  0,  0,  0,-17\n    ];\n\n    var SHIFTS = { p: 0, n: 1, b: 2, r: 3, q: 4, k: 5 }\n\n    var FLAGS = {\n        NORMAL: 'n',\n        CAPTURE: 'c',\n        BIG_PAWN: 'b',\n        EP_CAPTURE: 'e',\n        PROMOTION: 'p',\n        KSIDE_CASTLE: 'k',\n        QSIDE_CASTLE: 'q'\n    }\n\n    var BITS = {\n        NORMAL: 1,\n        CAPTURE: 2,\n        BIG_PAWN: 4,\n        EP_CAPTURE: 8,\n        PROMOTION: 16,\n        KSIDE_CASTLE: 32,\n        QSIDE_CASTLE: 64\n    }\n\n    var RANK_1 = 7\n    var RANK_2 = 6\n    var RANK_3 = 5\n    var RANK_4 = 4\n    var RANK_5 = 3\n    var RANK_6 = 2\n    var RANK_7 = 1\n    var RANK_8 = 0\n\n    // prettier-ignore\n    var SQUARES = {\n        a8:   0, b8:   1, c8:   2, d8:   3, e8:   4, f8:   5, g8:   6, h8:   7,\n        a7:  16, b7:  17, c7:  18, d7:  19, e7:  20, f7:  21, g7:  22, h7:  23,\n        a6:  32, b6:  33, c6:  34, d6:  35, e6:  36, f6:  37, g6:  38, h6:  39,\n        a5:  48, b5:  49, c5:  50, d5:  51, e5:  52, f5:  53, g5:  54, h5:  55,\n        a4:  64, b4:  65, c4:  66, d4:  67, e4:  68, f4:  69, g4:  70, h4:  71,\n        a3:  80, b3:  81, c3:  82, d3:  83, e3:  84, f3:  85, g3:  86, h3:  87,\n        a2:  96, b2:  97, c2:  98, d2:  99, e2: 100, f2: 101, g2: 102, h2: 103,\n        a1: 112, b1: 113, c1: 114, d1: 115, e1: 116, f1: 117, g1: 118, h1: 119\n    };\n\n    var ROOKS = {\n        w: [\n            { square: SQUARES.a1, flag: BITS.QSIDE_CASTLE },\n            { square: SQUARES.h1, flag: BITS.KSIDE_CASTLE }\n        ],\n        b: [\n            { square: SQUARES.a8, flag: BITS.QSIDE_CASTLE },\n            { square: SQUARES.h8, flag: BITS.KSIDE_CASTLE }\n        ]\n    }\n\n    var board = new Array(128)\n    var kings = { w: EMPTY, b: EMPTY }\n    var turn = WHITE\n    var castling = { w: 0, b: 0 }\n    var ep_square = EMPTY\n    var half_moves = 0\n    var move_number = 1\n    var history = []\n    var header = {}\n\n    /* if the user passes in a fen string, load it, else default to\n     * starting position\n     */\n    if (typeof fen === 'undefined') {\n        load(DEFAULT_POSITION)\n    } else {\n        load(fen)\n    }\n\n    function clear(keep_headers) {\n        if (typeof keep_headers === 'undefined') {\n            keep_headers = false\n        }\n\n        board = new Array(128)\n        kings = { w: EMPTY, b: EMPTY }\n        turn = WHITE\n        castling = { w: 0, b: 0 }\n        ep_square = EMPTY\n        half_moves = 0\n        move_number = 1\n        history = []\n        if (!keep_headers) header = {}\n        update_setup(generate_fen())\n    }\n\n    function reset() {\n        load(DEFAULT_POSITION)\n    }\n\n    function load(fen, keep_headers) {\n        if (typeof keep_headers === 'undefined') {\n            keep_headers = false\n        }\n\n        var tokens = fen.split(/\\s+/)\n        var position = tokens[0]\n        var square = 0\n\n        if (!validate_fen(fen).valid) {\n            return false\n        }\n\n        clear(keep_headers)\n\n        for (var i = 0; i < position.length; i++) {\n            var piece = position.charAt(i)\n\n            if (piece === '/') {\n                square += 8\n            } else if (is_digit(piece)) {\n                square += parseInt(piece, 10)\n            } else {\n                var color = piece < 'a' ? WHITE : BLACK\n                put({ type: piece.toLowerCase(), color: color }, algebraic(square))\n                square++\n            }\n        }\n\n        turn = tokens[1]\n\n        if (tokens[2].indexOf('K') > -1) {\n            castling.w |= BITS.KSIDE_CASTLE\n        }\n        if (tokens[2].indexOf('Q') > -1) {\n            castling.w |= BITS.QSIDE_CASTLE\n        }\n        if (tokens[2].indexOf('k') > -1) {\n            castling.b |= BITS.KSIDE_CASTLE\n        }\n        if (tokens[2].indexOf('q') > -1) {\n            castling.b |= BITS.QSIDE_CASTLE\n        }\n\n        ep_square = tokens[3] === '-' ? EMPTY : SQUARES[tokens[3]]\n        half_moves = parseInt(tokens[4], 10)\n        move_number = parseInt(tokens[5], 10)\n\n        update_setup(generate_fen())\n\n        return true\n    }\n\n    /* TODO: this function is pretty much crap - it validates structure but\n     * completely ignores content (e.g. doesn't verify that each side has a king)\n     * ... we should rewrite this, and ditch the silly error_number field while\n     * we're at it\n     */\n    function validate_fen(fen) {\n        var errors = {\n            0: 'No errors.',\n            1: 'FEN string must contain six space-delimited fields.',\n            2: '6th field (move number) must be a positive integer.',\n            3: '5th field (half move counter) must be a non-negative integer.',\n            4: '4th field (en-passant square) is invalid.',\n            5: '3rd field (castling availability) is invalid.',\n            6: '2nd field (side to move) is invalid.',\n            7: \"1st field (piece positions) does not contain 8 '/'-delimited rows.\",\n            8: '1st field (piece positions) is invalid [consecutive numbers].',\n            9: '1st field (piece positions) is invalid [invalid piece].',\n            10: '1st field (piece positions) is invalid [row too large].',\n            11: 'Illegal en-passant square'\n        }\n\n        /* 1st criterion: 6 space-seperated fields? */\n        var tokens = fen.split(/\\s+/)\n        if (tokens.length !== 6) {\n            return { valid: false, error_number: 1, error: errors[1] }\n        }\n\n        /* 2nd criterion: move number field is a integer value > 0? */\n        if (isNaN(tokens[5]) || parseInt(tokens[5], 10) <= 0) {\n            return { valid: false, error_number: 2, error: errors[2] }\n        }\n\n        /* 3rd criterion: half move counter is an integer >= 0? */\n        if (isNaN(tokens[4]) || parseInt(tokens[4], 10) < 0) {\n            return { valid: false, error_number: 3, error: errors[3] }\n        }\n\n        /* 4th criterion: 4th field is a valid e.p.-string? */\n        if (!/^(-|[abcdefgh][36])$/.test(tokens[3])) {\n            return { valid: false, error_number: 4, error: errors[4] }\n        }\n\n        /* 5th criterion: 3th field is a valid castle-string? */\n        if (!/^(KQ?k?q?|Qk?q?|kq?|q|-)$/.test(tokens[2])) {\n            return { valid: false, error_number: 5, error: errors[5] }\n        }\n\n        /* 6th criterion: 2nd field is \"w\" (white) or \"b\" (black)? */\n        if (!/^(w|b)$/.test(tokens[1])) {\n            return { valid: false, error_number: 6, error: errors[6] }\n        }\n\n        /* 7th criterion: 1st field contains 8 rows? */\n        var rows = tokens[0].split('/')\n        if (rows.length !== 8) {\n            return { valid: false, error_number: 7, error: errors[7] }\n        }\n\n        /* 8th criterion: every row is valid? */\n        for (var i = 0; i < rows.length; i++) {\n            /* check for right sum of fields AND not two numbers in succession */\n            var sum_fields = 0\n            var previous_was_number = false\n\n            for (var k = 0; k < rows[i].length; k++) {\n                if (!isNaN(rows[i][k])) {\n                    if (previous_was_number) {\n                        return { valid: false, error_number: 8, error: errors[8] }\n                    }\n                    sum_fields += parseInt(rows[i][k], 10)\n                    previous_was_number = true\n                } else {\n                    if (!/^[prnbqkPRNBQK]$/.test(rows[i][k])) {\n                        return { valid: false, error_number: 9, error: errors[9] }\n                    }\n                    sum_fields += 1\n                    previous_was_number = false\n                }\n            }\n            if (sum_fields !== 8) {\n                return { valid: false, error_number: 10, error: errors[10] }\n            }\n        }\n\n        if (\n            (tokens[3][1] == '3' && tokens[1] == 'w') ||\n            (tokens[3][1] == '6' && tokens[1] == 'b')\n        ) {\n            return { valid: false, error_number: 11, error: errors[11] }\n        }\n\n        /* everything's okay! */\n        return { valid: true, error_number: 0, error: errors[0] }\n    }\n\n    function generate_fen() {\n        var empty = 0\n        var fen = ''\n\n        for (var i = SQUARES.a8; i <= SQUARES.h1; i++) {\n            if (board[i] == null) {\n                empty++\n            } else {\n                if (empty > 0) {\n                    fen += empty\n                    empty = 0\n                }\n                var color = board[i].color\n                var piece = board[i].type\n\n                fen += color === WHITE ? piece.toUpperCase() : piece.toLowerCase()\n            }\n\n            if ((i + 1) & 0x88) {\n                if (empty > 0) {\n                    fen += empty\n                }\n\n                if (i !== SQUARES.h1) {\n                    fen += '/'\n                }\n\n                empty = 0\n                i += 8\n            }\n        }\n\n        var cflags = ''\n        if (castling[WHITE] & BITS.KSIDE_CASTLE) {\n            cflags += 'K'\n        }\n        if (castling[WHITE] & BITS.QSIDE_CASTLE) {\n            cflags += 'Q'\n        }\n        if (castling[BLACK] & BITS.KSIDE_CASTLE) {\n            cflags += 'k'\n        }\n        if (castling[BLACK] & BITS.QSIDE_CASTLE) {\n            cflags += 'q'\n        }\n\n        /* do we have an empty castling flag? */\n        cflags = cflags || '-'\n        var epflags = ep_square === EMPTY ? '-' : algebraic(ep_square)\n\n        return [fen, turn, cflags, epflags, half_moves, move_number].join(' ')\n    }\n\n    function set_header(args) {\n        for (var i = 0; i < args.length; i += 2) {\n            if (typeof args[i] === 'string' && typeof args[i + 1] === 'string') {\n                header[args[i]] = args[i + 1]\n            }\n        }\n        return header\n    }\n\n    /* called when the initial board setup is changed with put() or remove().\n     * modifies the SetUp and FEN properties of the header object.  if the FEN is\n     * equal to the default position, the SetUp and FEN are deleted\n     * the setup is only updated if history.length is zero, ie moves haven't been\n     * made.\n     */\n    function update_setup(fen) {\n        if (history.length > 0) return\n\n        if (fen !== DEFAULT_POSITION) {\n            header['SetUp'] = '1'\n            header['FEN'] = fen\n        } else {\n            delete header['SetUp']\n            delete header['FEN']\n        }\n    }\n\n    function get(square) {\n        var piece = board[SQUARES[square]]\n        return piece ? { type: piece.type, color: piece.color } : null\n    }\n\n    function put(piece, square) {\n        /* check for valid piece object */\n        if (!('type' in piece && 'color' in piece)) {\n            return false\n        }\n\n        /* check for piece */\n        if (SYMBOLS.indexOf(piece.type.toLowerCase()) === -1) {\n            return false\n        }\n\n        /* check for valid square */\n        if (!(square in SQUARES)) {\n            return false\n        }\n\n        var sq = SQUARES[square]\n\n        /* don't let the user place more than one king */\n        if (\n            piece.type == KING &&\n            !(kings[piece.color] == EMPTY || kings[piece.color] == sq)\n        ) {\n            return false\n        }\n\n        board[sq] = { type: piece.type, color: piece.color }\n        if (piece.type === KING) {\n            kings[piece.color] = sq\n        }\n\n        update_setup(generate_fen())\n\n        return true\n    }\n\n    function remove(square) {\n        var piece = get(square)\n        board[SQUARES[square]] = null\n        if (piece && piece.type === KING) {\n            kings[piece.color] = EMPTY\n        }\n\n        update_setup(generate_fen())\n\n        return piece\n    }\n\n    function build_move(board, from, to, flags, promotion) {\n        var move = {\n            color: turn,\n            from: from,\n            to: to,\n            flags: flags,\n            piece: board[from].type\n        }\n\n        if (promotion) {\n            move.flags |= BITS.PROMOTION\n            move.promotion = promotion\n        }\n\n        if (board[to]) {\n            move.captured = board[to].type\n        } else if (flags & BITS.EP_CAPTURE) {\n            move.captured = PAWN\n        }\n        return move\n    }\n\n    function generate_moves(options) {\n        function add_move(board, moves, from, to, flags) {\n            /* if pawn promotion */\n            if (\n                board[from].type === PAWN &&\n                (rank(to) === RANK_8 || rank(to) === RANK_1)\n            ) {\n                var pieces = [QUEEN, ROOK, BISHOP, KNIGHT]\n                for (var i = 0, len = pieces.length; i < len; i++) {\n                    moves.push(build_move(board, from, to, flags, pieces[i]))\n                }\n            } else {\n                moves.push(build_move(board, from, to, flags))\n            }\n        }\n\n        var moves = []\n        var us = turn\n        var them = swap_color(us)\n        var second_rank = { b: RANK_7, w: RANK_2 }\n\n        var first_sq = SQUARES.a8\n        var last_sq = SQUARES.h1\n        var single_square = false\n\n        /* do we want legal moves? */\n        var legal =\n            typeof options !== 'undefined' && 'legal' in options\n                ? options.legal\n                : true\n\n        /* are we generating moves for a single square? */\n        if (typeof options !== 'undefined' && 'square' in options) {\n            if (options.square in SQUARES) {\n                first_sq = last_sq = SQUARES[options.square]\n                single_square = true\n            } else {\n                /* invalid square */\n                return []\n            }\n        }\n\n        for (var i = first_sq; i <= last_sq; i++) {\n            /* did we run off the end of the board */\n            if (i & 0x88) {\n                i += 7\n                continue\n            }\n\n            var piece = board[i]\n            if (piece == null || piece.color !== us) {\n                continue\n            }\n\n            if (piece.type === PAWN) {\n                /* single square, non-capturing */\n                var square = i + PAWN_OFFSETS[us][0]\n                if (board[square] == null) {\n                    add_move(board, moves, i, square, BITS.NORMAL)\n\n                    /* double square */\n                    var square = i + PAWN_OFFSETS[us][1]\n                    if (second_rank[us] === rank(i) && board[square] == null) {\n                        add_move(board, moves, i, square, BITS.BIG_PAWN)\n                    }\n                }\n\n                /* pawn captures */\n                for (j = 2; j < 4; j++) {\n                    var square = i + PAWN_OFFSETS[us][j]\n                    if (square & 0x88) continue\n\n                    if (board[square] != null && board[square].color === them) {\n                        add_move(board, moves, i, square, BITS.CAPTURE)\n                    } else if (square === ep_square) {\n                        add_move(board, moves, i, ep_square, BITS.EP_CAPTURE)\n                    }\n                }\n            } else {\n                for (var j = 0, len = PIECE_OFFSETS[piece.type].length; j < len; j++) {\n                    var offset = PIECE_OFFSETS[piece.type][j]\n                    var square = i\n\n                    while (true) {\n                        square += offset\n                        if (square & 0x88) break\n\n                        if (board[square] == null) {\n                            add_move(board, moves, i, square, BITS.NORMAL)\n                        } else {\n                            if (board[square].color === us) break\n                            add_move(board, moves, i, square, BITS.CAPTURE)\n                            break\n                        }\n\n                        /* break, if knight or king */\n                        if (piece.type === 'n' || piece.type === 'k') break\n                    }\n                }\n            }\n        }\n\n        /* check for castling if: a) we're generating all moves, or b) we're doing\n         * single square move generation on the king's square\n         */\n        if (!single_square || last_sq === kings[us]) {\n            /* king-side castling */\n            if (castling[us] & BITS.KSIDE_CASTLE) {\n                var castling_from = kings[us]\n                var castling_to = castling_from + 2\n\n                if (\n                    board[castling_from + 1] == null &&\n                    board[castling_to] == null &&\n                    !attacked(them, kings[us]) &&\n                    !attacked(them, castling_from + 1) &&\n                    !attacked(them, castling_to)\n                ) {\n                    add_move(board, moves, kings[us], castling_to, BITS.KSIDE_CASTLE)\n                }\n            }\n\n            /* queen-side castling */\n            if (castling[us] & BITS.QSIDE_CASTLE) {\n                var castling_from = kings[us]\n                var castling_to = castling_from - 2\n\n                if (\n                    board[castling_from - 1] == null &&\n                    board[castling_from - 2] == null &&\n                    board[castling_from - 3] == null &&\n                    !attacked(them, kings[us]) &&\n                    !attacked(them, castling_from - 1) &&\n                    !attacked(them, castling_to)\n                ) {\n                    add_move(board, moves, kings[us], castling_to, BITS.QSIDE_CASTLE)\n                }\n            }\n        }\n\n        /* return all pseudo-legal moves (this includes moves that allow the king\n         * to be captured)\n         */\n        if (!legal) {\n            return moves\n        }\n\n        /* filter out illegal moves */\n        var legal_moves = []\n        for (var i = 0, len = moves.length; i < len; i++) {\n            make_move(moves[i])\n            if (!king_attacked(us)) {\n                legal_moves.push(moves[i])\n            }\n            undo_move()\n        }\n\n        return legal_moves\n    }\n\n    /* convert a move from 0x88 coordinates to Standard Algebraic Notation\n     * (SAN)\n     *\n     * @param {boolean} sloppy Use the sloppy SAN generator to work around over\n     * disambiguation bugs in Fritz and Chessbase.  See below:\n     *\n     * r1bqkbnr/ppp2ppp/2n5/1B1pP3/4P3/8/PPPP2PP/RNBQK1NR b KQkq - 2 4\n     * 4. ... Nge7 is overly disambiguated because the knight on c6 is pinned\n     * 4. ... Ne7 is technically the valid SAN\n     */\n    function move_to_san(move, sloppy) {\n        var output = ''\n\n        if (move.flags & BITS.KSIDE_CASTLE) {\n            output = 'O-O'\n        } else if (move.flags & BITS.QSIDE_CASTLE) {\n            output = 'O-O-O'\n        } else {\n            var disambiguator = get_disambiguator(move, sloppy)\n\n            if (move.piece !== PAWN) {\n                output += move.piece.toUpperCase() + disambiguator\n            }\n\n            if (move.flags & (BITS.CAPTURE | BITS.EP_CAPTURE)) {\n                if (move.piece === PAWN) {\n                    output += algebraic(move.from)[0]\n                }\n                output += 'x'\n            }\n\n            output += algebraic(move.to)\n\n            if (move.flags & BITS.PROMOTION) {\n                output += '=' + move.promotion.toUpperCase()\n            }\n        }\n\n        make_move(move)\n        if (in_check()) {\n            if (in_checkmate()) {\n                output += '#'\n            } else {\n                output += '+'\n            }\n        }\n        undo_move()\n\n        return output\n    }\n\n    // parses all of the decorators out of a SAN string\n    function stripped_san(move) {\n        return move.replace(/=/, '').replace(/[+#]?[?!]*$/, '')\n    }\n\n    function attacked(color, square) {\n        for (var i = SQUARES.a8; i <= SQUARES.h1; i++) {\n            /* did we run off the end of the board */\n            if (i & 0x88) {\n                i += 7\n                continue\n            }\n\n            /* if empty square or wrong color */\n            if (board[i] == null || board[i].color !== color) continue\n\n            var piece = board[i]\n            var difference = i - square\n            var index = difference + 119\n\n            if (ATTACKS[index] & (1 << SHIFTS[piece.type])) {\n                if (piece.type === PAWN) {\n                    if (difference > 0) {\n                        if (piece.color === WHITE) return true\n                    } else {\n                        if (piece.color === BLACK) return true\n                    }\n                    continue\n                }\n\n                /* if the piece is a knight or a king */\n                if (piece.type === 'n' || piece.type === 'k') return true\n\n                var offset = RAYS[index]\n                var j = i + offset\n\n                var blocked = false\n                while (j !== square) {\n                    if (board[j] != null) {\n                        blocked = true\n                        break\n                    }\n                    j += offset\n                }\n\n                if (!blocked) return true\n            }\n        }\n\n        return false\n    }\n\n    function king_attacked(color) {\n        return attacked(swap_color(color), kings[color])\n    }\n\n    function in_check() {\n        return king_attacked(turn)\n    }\n\n    function in_checkmate() {\n        return in_check() && generate_moves().length === 0\n    }\n\n    function in_stalemate() {\n        return !in_check() && generate_moves().length === 0\n    }\n\n    function insufficient_material() {\n        var pieces = {}\n        var bishops = []\n        var num_pieces = 0\n        var sq_color = 0\n\n        for (var i = SQUARES.a8; i <= SQUARES.h1; i++) {\n            sq_color = (sq_color + 1) % 2\n            if (i & 0x88) {\n                i += 7\n                continue\n            }\n\n            var piece = board[i]\n            if (piece) {\n                pieces[piece.type] = piece.type in pieces ? pieces[piece.type] + 1 : 1\n                if (piece.type === BISHOP) {\n                    bishops.push(sq_color)\n                }\n                num_pieces++\n            }\n        }\n\n        /* k vs. k */\n        if (num_pieces === 2) {\n            return true\n        } else if (\n            /* k vs. kn .... or .... k vs. kb */\n            num_pieces === 3 &&\n            (pieces[BISHOP] === 1 || pieces[KNIGHT] === 1)\n        ) {\n            return true\n        } else if (num_pieces === pieces[BISHOP] + 2) {\n            /* kb vs. kb where any number of bishops are all on the same color */\n            var sum = 0\n            var len = bishops.length\n            for (var i = 0; i < len; i++) {\n                sum += bishops[i]\n            }\n            if (sum === 0 || sum === len) {\n                return true\n            }\n        }\n\n        return false\n    }\n\n    function in_threefold_repetition() {\n        /* TODO: while this function is fine for casual use, a better\n         * implementation would use a Zobrist key (instead of FEN). the\n         * Zobrist key would be maintained in the make_move/undo_move functions,\n         * avoiding the costly that we do below.\n         */\n        var moves = []\n        var positions = {}\n        var repetition = false\n\n        while (true) {\n            var move = undo_move()\n            if (!move) break\n            moves.push(move)\n        }\n\n        while (true) {\n            /* remove the last two fields in the FEN string, they're not needed\n             * when checking for draw by rep */\n            var fen = generate_fen()\n                .split(' ')\n                .slice(0, 4)\n                .join(' ')\n\n            /* has the position occurred three or move times */\n            positions[fen] = fen in positions ? positions[fen] + 1 : 1\n            if (positions[fen] >= 3) {\n                repetition = true\n            }\n\n            if (!moves.length) {\n                break\n            }\n            make_move(moves.pop())\n        }\n\n        return repetition\n    }\n\n    function push(move) {\n        history.push({\n            move: move,\n            kings: { b: kings.b, w: kings.w },\n            turn: turn,\n            castling: { b: castling.b, w: castling.w },\n            ep_square: ep_square,\n            half_moves: half_moves,\n            move_number: move_number\n        })\n    }\n\n    function make_move(move) {\n        var us = turn\n        var them = swap_color(us)\n        push(move)\n\n        board[move.to] = board[move.from]\n        board[move.from] = null\n\n        /* if ep capture, remove the captured pawn */\n        if (move.flags & BITS.EP_CAPTURE) {\n            if (turn === BLACK) {\n                board[move.to - 16] = null\n            } else {\n                board[move.to + 16] = null\n            }\n        }\n\n        /* if pawn promotion, replace with new piece */\n        if (move.flags & BITS.PROMOTION) {\n            board[move.to] = { type: move.promotion, color: us }\n        }\n\n        /* if we moved the king */\n        if (board[move.to].type === KING) {\n            kings[board[move.to].color] = move.to\n\n            /* if we castled, move the rook next to the king */\n            if (move.flags & BITS.KSIDE_CASTLE) {\n                var castling_to = move.to - 1\n                var castling_from = move.to + 1\n                board[castling_to] = board[castling_from]\n                board[castling_from] = null\n            } else if (move.flags & BITS.QSIDE_CASTLE) {\n                var castling_to = move.to + 1\n                var castling_from = move.to - 2\n                board[castling_to] = board[castling_from]\n                board[castling_from] = null\n            }\n\n            /* turn off castling */\n            castling[us] = ''\n        }\n\n        /* turn off castling if we move a rook */\n        if (castling[us]) {\n            for (var i = 0, len = ROOKS[us].length; i < len; i++) {\n                if (\n                    move.from === ROOKS[us][i].square &&\n                    castling[us] & ROOKS[us][i].flag\n                ) {\n                    castling[us] ^= ROOKS[us][i].flag\n                    break\n                }\n            }\n        }\n\n        /* turn off castling if we capture a rook */\n        if (castling[them]) {\n            for (var i = 0, len = ROOKS[them].length; i < len; i++) {\n                if (\n                    move.to === ROOKS[them][i].square &&\n                    castling[them] & ROOKS[them][i].flag\n                ) {\n                    castling[them] ^= ROOKS[them][i].flag\n                    break\n                }\n            }\n        }\n\n        /* if big pawn move, update the en passant square */\n        if (move.flags & BITS.BIG_PAWN) {\n            if (turn === 'b') {\n                ep_square = move.to - 16\n            } else {\n                ep_square = move.to + 16\n            }\n        } else {\n            ep_square = EMPTY\n        }\n\n        /* reset the 50 move counter if a pawn is moved or a piece is captured */\n        if (move.piece === PAWN) {\n            half_moves = 0\n        } else if (move.flags & (BITS.CAPTURE | BITS.EP_CAPTURE)) {\n            half_moves = 0\n        } else {\n            half_moves++\n        }\n\n        if (turn === BLACK) {\n            move_number++\n        }\n        turn = swap_color(turn)\n    }\n\n    function undo_move() {\n        var old = history.pop()\n        if (old == null) {\n            return null\n        }\n\n        var move = old.move\n        kings = old.kings\n        turn = old.turn\n        castling = old.castling\n        ep_square = old.ep_square\n        half_moves = old.half_moves\n        move_number = old.move_number\n\n        var us = turn\n        var them = swap_color(turn)\n\n        board[move.from] = board[move.to]\n        board[move.from].type = move.piece // to undo any promotions\n        board[move.to] = null\n\n        if (move.flags & BITS.CAPTURE) {\n            board[move.to] = { type: move.captured, color: them }\n        } else if (move.flags & BITS.EP_CAPTURE) {\n            var index\n            if (us === BLACK) {\n                index = move.to - 16\n            } else {\n                index = move.to + 16\n            }\n            board[index] = { type: PAWN, color: them }\n        }\n\n        if (move.flags & (BITS.KSIDE_CASTLE | BITS.QSIDE_CASTLE)) {\n            var castling_to, castling_from\n            if (move.flags & BITS.KSIDE_CASTLE) {\n                castling_to = move.to + 1\n                castling_from = move.to - 1\n            } else if (move.flags & BITS.QSIDE_CASTLE) {\n                castling_to = move.to - 2\n                castling_from = move.to + 1\n            }\n\n            board[castling_to] = board[castling_from]\n            board[castling_from] = null\n        }\n\n        return move\n    }\n\n    /* this function is used to uniquely identify ambiguous moves */\n    function get_disambiguator(move, sloppy) {\n        var moves = generate_moves({ legal: !sloppy })\n\n        var from = move.from\n        var to = move.to\n        var piece = move.piece\n\n        var ambiguities = 0\n        var same_rank = 0\n        var same_file = 0\n\n        for (var i = 0, len = moves.length; i < len; i++) {\n            var ambig_from = moves[i].from\n            var ambig_to = moves[i].to\n            var ambig_piece = moves[i].piece\n\n            /* if a move of the same piece type ends on the same to square, we'll\n             * need to add a disambiguator to the algebraic notation\n             */\n            if (piece === ambig_piece && from !== ambig_from && to === ambig_to) {\n                ambiguities++\n\n                if (rank(from) === rank(ambig_from)) {\n                    same_rank++\n                }\n\n                if (file(from) === file(ambig_from)) {\n                    same_file++\n                }\n            }\n        }\n\n        if (ambiguities > 0) {\n            /* if there exists a similar moving piece on the same rank and file as\n             * the move in question, use the square as the disambiguator\n             */\n            if (same_rank > 0 && same_file > 0) {\n                return algebraic(from)\n            } else if (same_file > 0) {\n                /* if the moving piece rests on the same file, use the rank symbol as the\n                 * disambiguator\n                 */\n                return algebraic(from).charAt(1)\n            } else {\n                /* else use the file symbol */\n                return algebraic(from).charAt(0)\n            }\n        }\n\n        return ''\n    }\n\n    function ascii() {\n        var s = '   +------------------------+\\n'\n        for (var i = SQUARES.a8; i <= SQUARES.h1; i++) {\n            /* display the rank */\n            if (file(i) === 0) {\n                s += ' ' + '87654321'[rank(i)] + ' |'\n            }\n\n            /* empty piece */\n            if (board[i] == null) {\n                s += ' . '\n            } else {\n                var piece = board[i].type\n                var color = board[i].color\n                var symbol = color === WHITE ? piece.toUpperCase() : piece.toLowerCase()\n                s += ' ' + symbol + ' '\n            }\n\n            if ((i + 1) & 0x88) {\n                s += '|\\n'\n                i += 8\n            }\n        }\n        s += '   +------------------------+\\n'\n        s += '     a  b  c  d  e  f  g  h\\n'\n\n        return s\n    }\n\n    // convert a move from Standard Algebraic Notation (SAN) to 0x88 coordinates\n    function move_from_san(move, sloppy) {\n        // strip off any move decorations: e.g Nf3+?!\n        var clean_move = stripped_san(move)\n\n        // if we're using the sloppy parser run a regex to grab piece, to, and from\n        // this should parse invalid SAN like: Pe2-e4, Rc1c4, Qf3xf7\n        if (sloppy) {\n            var matches = clean_move.match(\n                /([pnbrqkPNBRQK])?([a-h][1-8])x?-?([a-h][1-8])([qrbnQRBN])?/\n            )\n            if (matches) {\n                var piece = matches[1]\n                var from = matches[2]\n                var to = matches[3]\n                var promotion = matches[4]\n            }\n        }\n\n        var moves = generate_moves()\n        for (var i = 0, len = moves.length; i < len; i++) {\n            // try the strict parser first, then the sloppy parser if requested\n            // by the user\n            if (\n                clean_move === stripped_san(move_to_san(moves[i])) ||\n                (sloppy && clean_move === stripped_san(move_to_san(moves[i], true)))\n            ) {\n                return moves[i]\n            } else {\n                if (\n                    matches &&\n                    (!piece || piece.toLowerCase() == moves[i].piece) &&\n                    SQUARES[from] == moves[i].from &&\n                    SQUARES[to] == moves[i].to &&\n                    (!promotion || promotion.toLowerCase() == moves[i].promotion)\n                ) {\n                    return moves[i]\n                }\n            }\n        }\n\n        return null\n    }\n\n    /*****************************************************************************\n     * UTILITY FUNCTIONS\n     ****************************************************************************/\n    function rank(i) {\n        return i >> 4\n    }\n\n    function file(i) {\n        return i & 15\n    }\n\n    function algebraic(i) {\n        var f = file(i),\n            r = rank(i)\n        return 'abcdefgh'.substring(f, f + 1) + '87654321'.substring(r, r + 1)\n    }\n\n    function swap_color(c) {\n        return c === WHITE ? BLACK : WHITE\n    }\n\n    function is_digit(c) {\n        return '0123456789'.indexOf(c) !== -1\n    }\n\n    /* pretty = external move object */\n    function make_pretty(ugly_move) {\n        var move = clone(ugly_move)\n        move.san = move_to_san(move, false)\n        move.to = algebraic(move.to)\n        move.from = algebraic(move.from)\n\n        var flags = ''\n\n        for (var flag in BITS) {\n            if (BITS[flag] & move.flags) {\n                flags += FLAGS[flag]\n            }\n        }\n        move.flags = flags\n\n        return move\n    }\n\n    function clone(obj) {\n        var dupe = obj instanceof Array ? [] : {}\n\n        for (var property in obj) {\n            if (typeof property === 'object') {\n                dupe[property] = clone(obj[property])\n            } else {\n                dupe[property] = obj[property]\n            }\n        }\n\n        return dupe\n    }\n\n    function trim(str) {\n        return str.replace(/^\\s+|\\s+$/g, '')\n    }\n\n    /*****************************************************************************\n     * DEBUGGING UTILITIES\n     ****************************************************************************/\n    function perft(depth) {\n        var moves = generate_moves({ legal: false })\n        var nodes = 0\n        var color = turn\n\n        for (var i = 0, len = moves.length; i < len; i++) {\n            make_move(moves[i])\n            if (!king_attacked(color)) {\n                if (depth - 1 > 0) {\n                    var child_nodes = perft(depth - 1)\n                    nodes += child_nodes\n                } else {\n                    nodes++\n                }\n            }\n            undo_move()\n        }\n\n        return nodes\n    }\n\n    return {\n        /***************************************************************************\n         * PUBLIC CONSTANTS (is there a better way to do this?)\n         **************************************************************************/\n        WHITE: WHITE,\n        BLACK: BLACK,\n        PAWN: PAWN,\n        KNIGHT: KNIGHT,\n        BISHOP: BISHOP,\n        ROOK: ROOK,\n        QUEEN: QUEEN,\n        KING: KING,\n        SQUARES: (function() {\n            /* from the ECMA-262 spec (section 12.6.4):\n             * \"The mechanics of enumerating the properties ... is\n             * implementation dependent\"\n             * so: for (var sq in SQUARES) { keys.push(sq); } might not be\n             * ordered correctly\n             */\n            var keys = []\n            for (var i = SQUARES.a8; i <= SQUARES.h1; i++) {\n                if (i & 0x88) {\n                    i += 7\n                    continue\n                }\n                keys.push(algebraic(i))\n            }\n            return keys\n        })(),\n        FLAGS: FLAGS,\n\n        /***************************************************************************\n         * PUBLIC API\n         **************************************************************************/\n        load: function(fen) {\n            return load(fen)\n        },\n\n        reset: function() {\n            return reset()\n        },\n\n        moves: function(options) {\n            /* The internal representation of a chess move is in 0x88 format, and\n             * not meant to be human-readable.  The code below converts the 0x88\n             * square coordinates to algebraic coordinates.  It also prunes an\n             * unnecessary move keys resulting from a verbose call.\n             */\n\n            var ugly_moves = generate_moves(options)\n            var moves = []\n\n            for (var i = 0, len = ugly_moves.length; i < len; i++) {\n                /* does the user want a full move object (most likely not), or just\n                 * SAN\n                 */\n                if (\n                    typeof options !== 'undefined' &&\n                    'verbose' in options &&\n                    options.verbose\n                ) {\n                    moves.push(make_pretty(ugly_moves[i]))\n                } else {\n                    moves.push(move_to_san(ugly_moves[i], false))\n                }\n            }\n\n            return moves\n        },\n\n        in_check: function() {\n            return in_check()\n        },\n\n        in_checkmate: function() {\n            return in_checkmate()\n        },\n\n        in_stalemate: function() {\n            return in_stalemate()\n        },\n\n        in_draw: function() {\n            return (\n                half_moves >= 100 ||\n                in_stalemate() ||\n                insufficient_material() ||\n                in_threefold_repetition()\n            )\n        },\n\n        insufficient_material: function() {\n            return insufficient_material()\n        },\n\n        in_threefold_repetition: function() {\n            return in_threefold_repetition()\n        },\n\n        game_over: function() {\n            return (\n                half_moves >= 100 ||\n                in_checkmate() ||\n                in_stalemate() ||\n                insufficient_material() ||\n                in_threefold_repetition()\n            )\n        },\n\n        validate_fen: function(fen) {\n            return validate_fen(fen)\n        },\n\n        fen: function() {\n            return generate_fen()\n        },\n\n        board: function() {\n            var output = [],\n                row = []\n\n            for (var i = SQUARES.a8; i <= SQUARES.h1; i++) {\n                if (board[i] == null) {\n                    row.push(null)\n                } else {\n                    row.push({ type: board[i].type, color: board[i].color })\n                }\n                if ((i + 1) & 0x88) {\n                    output.push(row)\n                    row = []\n                    i += 8\n                }\n            }\n\n            return output\n        },\n\n        pgn: function(options) {\n            /* using the specification from http://www.chessclub.com/help/PGN-spec\n             * example for html usage: .pgn({ max_width: 72, newline_char: \"<br />\" })\n             */\n            var newline =\n                typeof options === 'object' && typeof options.newline_char === 'string'\n                    ? options.newline_char\n                    : '\\n'\n            var max_width =\n                typeof options === 'object' && typeof options.max_width === 'number'\n                    ? options.max_width\n                    : 0\n            var result = []\n            var header_exists = false\n\n            /* add the PGN header headerrmation */\n            for (var i in header) {\n                /* TODO: order of enumerated properties in header object is not\n                 * guaranteed, see ECMA-262 spec (section 12.6.4)\n                 */\n                result.push('[' + i + ' \"' + header[i] + '\"]' + newline)\n                header_exists = true\n            }\n\n            if (header_exists && history.length) {\n                result.push(newline)\n            }\n\n            /* pop all of history onto reversed_history */\n            var reversed_history = []\n            while (history.length > 0) {\n                reversed_history.push(undo_move())\n            }\n\n            var moves = []\n            var move_string = ''\n\n            /* build the list of moves.  a move_string looks like: \"3. e3 e6\" */\n            while (reversed_history.length > 0) {\n                var move = reversed_history.pop()\n\n                /* if the position started with black to move, start PGN with 1. ... */\n                if (!history.length && move.color === 'b') {\n                    move_string = move_number + '. ...'\n                } else if (move.color === 'w') {\n                    /* store the previous generated move_string if we have one */\n                    if (move_string.length) {\n                        moves.push(move_string)\n                    }\n                    move_string = move_number + '.'\n                }\n\n                move_string = move_string + ' ' + move_to_san(move, false)\n                make_move(move)\n            }\n\n            /* are there any other leftover moves? */\n            if (move_string.length) {\n                moves.push(move_string)\n            }\n\n            /* is there a result? */\n            if (typeof header.Result !== 'undefined') {\n                moves.push(header.Result)\n            }\n\n            /* history should be back to what is was before we started generating PGN,\n             * so join together moves\n             */\n            if (max_width === 0) {\n                return result.join('') + moves.join(' ')\n            }\n\n            /* wrap the PGN output at max_width */\n            var current_width = 0\n            for (var i = 0; i < moves.length; i++) {\n                /* if the current move will push past max_width */\n                if (current_width + moves[i].length > max_width && i !== 0) {\n                    /* don't end the line with whitespace */\n                    if (result[result.length - 1] === ' ') {\n                        result.pop()\n                    }\n\n                    result.push(newline)\n                    current_width = 0\n                } else if (i !== 0) {\n                    result.push(' ')\n                    current_width++\n                }\n                result.push(moves[i])\n                current_width += moves[i].length\n            }\n\n            return result.join('')\n        },\n\n        load_pgn: function(pgn, options) {\n            // allow the user to specify the sloppy move parser to work around over\n            // disambiguation bugs in Fritz and Chessbase\n            var sloppy =\n                typeof options !== 'undefined' && 'sloppy' in options\n                    ? options.sloppy\n                    : false\n\n            function mask(str) {\n                return str.replace(/\\\\/g, '\\\\')\n            }\n\n            function has_keys(object) {\n                for (var key in object) {\n                    return true\n                }\n                return false\n            }\n\n            function parse_pgn_header(header, options) {\n                var newline_char =\n                    typeof options === 'object' &&\n                    typeof options.newline_char === 'string'\n                        ? options.newline_char\n                        : '\\r?\\n'\n                var header_obj = {}\n                var headers = header.split(new RegExp(mask(newline_char)))\n                var key = ''\n                var value = ''\n\n                for (var i = 0; i < headers.length; i++) {\n                    key = headers[i].replace(/^\\[([A-Z][A-Za-z]*)\\s.*\\]$/, '$1')\n                    value = headers[i].replace(/^\\[[A-Za-z]+\\s\"(.*)\"\\]$/, '$1')\n                    if (trim(key).length > 0) {\n                        header_obj[key] = value\n                    }\n                }\n\n                return header_obj\n            }\n\n            var newline_char =\n                typeof options === 'object' && typeof options.newline_char === 'string'\n                    ? options.newline_char\n                    : '\\r?\\n'\n\n            // RegExp to split header. Takes advantage of the fact that header and movetext\n            // will always have a blank line between them (ie, two newline_char's).\n            // With default newline_char, will equal: /^(\\[((?:\\r?\\n)|.)*\\])(?:\\r?\\n){2}/\n            var header_regex = new RegExp(\n                '^(\\\\[((?:' +\n                mask(newline_char) +\n                ')|.)*\\\\])' +\n                '(?:' +\n                mask(newline_char) +\n                '){2}'\n            )\n\n            // If no header given, begin with moves.\n            var header_string = header_regex.test(pgn)\n                ? header_regex.exec(pgn)[1]\n                : ''\n\n            // Put the board in the starting position\n            reset()\n\n            /* parse PGN header */\n            var headers = parse_pgn_header(header_string, options)\n            for (var key in headers) {\n                set_header([key, headers[key]])\n            }\n\n            /* load the starting position indicated by [Setup '1'] and\n             * [FEN position] */\n            if (headers['SetUp'] === '1') {\n                if (!('FEN' in headers && load(headers['FEN'], true))) {\n                    // second argument to load: don't clear the headers\n                    return false\n                }\n            }\n\n            /* delete header to get the moves */\n            var ms = pgn\n                .replace(header_string, '')\n                .replace(new RegExp(mask(newline_char), 'g'), ' ')\n\n            /* delete comments */\n            ms = ms.replace(/(\\{[^}]+\\})+?/g, '')\n\n            /* delete recursive annotation variations */\n            var rav_regex = /(\\([^\\(\\)]+\\))+?/g\n            while (rav_regex.test(ms)) {\n                ms = ms.replace(rav_regex, '')\n            }\n\n            /* delete move numbers */\n            ms = ms.replace(/\\d+\\.(\\.\\.)?/g, '')\n\n            /* delete ... indicating black to move */\n            ms = ms.replace(/\\.\\.\\./g, '')\n\n            /* delete numeric annotation glyphs */\n            ms = ms.replace(/\\$\\d+/g, '')\n\n            /* trim and get array of moves */\n            var moves = trim(ms).split(new RegExp(/\\s+/))\n\n            /* delete empty entries */\n            moves = moves\n                .join(',')\n                .replace(/,,+/g, ',')\n                .split(',')\n            var move = ''\n\n            for (var half_move = 0; half_move < moves.length - 1; half_move++) {\n                move = move_from_san(moves[half_move], sloppy)\n\n                /* move not possible! (don't clear the board to examine to show the\n                 * latest valid position)\n                 */\n                if (move == null) {\n                    return false\n                } else {\n                    make_move(move)\n                }\n            }\n\n            /* examine last move */\n            move = moves[moves.length - 1]\n            if (POSSIBLE_RESULTS.indexOf(move) > -1) {\n                if (has_keys(header) && typeof header.Result === 'undefined') {\n                    set_header(['Result', move])\n                }\n            } else {\n                move = move_from_san(move, sloppy)\n                if (move == null) {\n                    return false\n                } else {\n                    make_move(move)\n                }\n            }\n            return true\n        },\n\n        header: function() {\n            return set_header(arguments)\n        },\n\n        ascii: function() {\n            return ascii()\n        },\n\n        turn: function() {\n            return turn\n        },\n\n        move: function(move, options) {\n            /* The move function can be called with in the following parameters:\n             *\n             * .move('Nxb7')      <- where 'move' is a case-sensitive SAN string\n             *\n             * .move({ from: 'h7', <- where the 'move' is a move object (additional\n             *         to :'h8',      fields are ignored)\n             *         promotion: 'q',\n             *      })\n             */\n\n            // allow the user to specify the sloppy move parser to work around over\n            // disambiguation bugs in Fritz and Chessbase\n            var sloppy =\n                typeof options !== 'undefined' && 'sloppy' in options\n                    ? options.sloppy\n                    : false\n\n            var move_obj = null\n\n            if (typeof move === 'string') {\n                move_obj = move_from_san(move, sloppy)\n            } else if (typeof move === 'object') {\n                var moves = generate_moves()\n\n                /* convert the pretty move object to an ugly move object */\n                for (var i = 0, len = moves.length; i < len; i++) {\n                    if (\n                        move.from === algebraic(moves[i].from) &&\n                        move.to === algebraic(moves[i].to) &&\n                        (!('promotion' in moves[i]) ||\n                            move.promotion === moves[i].promotion)\n                    ) {\n                        move_obj = moves[i]\n                        break\n                    }\n                }\n            }\n\n            /* failed to find move */\n            if (!move_obj) {\n                return null\n            }\n\n            /* need to make a copy of move because we can't generate SAN after the\n             * move is made\n             */\n            var pretty_move = make_pretty(move_obj)\n\n            make_move(move_obj)\n\n            return pretty_move\n        },\n\n        undo: function() {\n            var move = undo_move()\n            return move ? make_pretty(move) : null\n        },\n\n        clear: function() {\n            return clear()\n        },\n\n        put: function(piece, square) {\n            return put(piece, square)\n        },\n\n        get: function(square) {\n            return get(square)\n        },\n\n        remove: function(square) {\n            return remove(square)\n        },\n\n        perft: function(depth) {\n            return perft(depth)\n        },\n\n        square_color: function(square) {\n            if (square in SQUARES) {\n                var sq_0x88 = SQUARES[square]\n                return (rank(sq_0x88) + file(sq_0x88)) % 2 === 0 ? 'light' : 'dark'\n            }\n\n            return null\n        },\n\n        history: function(options) {\n            var reversed_history = []\n            var move_history = []\n            var verbose =\n                typeof options !== 'undefined' &&\n                'verbose' in options &&\n                options.verbose\n\n            while (history.length > 0) {\n                reversed_history.push(undo_move())\n            }\n\n            while (reversed_history.length > 0) {\n                var move = reversed_history.pop()\n                if (verbose) {\n                    move_history.push(make_pretty(move))\n                } else {\n                    move_history.push(move_to_san(move))\n                }\n                make_move(move)\n            }\n\n            return move_history\n        }\n    }\n}\n\n/* export Chess object if using node or any other CommonJS compatible\n * environment */\nif (typeof exports !== 'undefined') exports.Chess = Chess\n/* export Chess object for any RequireJS compatible environment */\nif (typeof define !== 'undefined')\n    define(function() {\n        return Chess\n    })\n\n/**\n * ES6 Wrapper for chess.js\n * The API of ChessJs will be the same as of chess.js\n */\nexport { Chess }","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar matchFullFEN = /^\\s*([prnbqkPRNBQK12345678]{1,8}(?:\\/[prnbqkPRNBQK12345678]{1,8}){7})\\s+(w|b)\\s+([KQkqA-Ha-h]{1,4}|\\-)\\s+(?:(?:([a-h][36]|\\-)\\s+(\\d{1,3})\\s+(\\d{1,4}))|(?:0\\s+0))\\s*$/;\nvar fenExpand = /[1-8]+/g;\nvar fenPack = /\\-+/g;\nvar fenSubst = { 1: '-', 2: '--', 3: '---', 4: '----', 5: '-----', 6: '------', 7: '-------', 8: '--------' };\nvar FenParser = (function () {\n    function FenParser(value) {\n        this.original = '';\n        this.isValid = false;\n        this.positions = '';\n        this.ranks = [];\n        this.turn = '';\n        this.castles = '';\n        this.enpass = '';\n        this.halfmoveClock = 0;\n        this.moveNumber = 0;\n        this.original = (typeof value === 'string') ? value : '';\n        var match = this.original.match(matchFullFEN);\n        this.isValid = !!match;\n        if (match) {\n            this.positions = match[1];\n            this.ranks = match[1].split('/').map(function (s) { return s.replace(fenExpand, function (i) { return fenSubst[i]; }); });\n            this.turn = match[2];\n            this.castles = match[3];\n            this.enpass = match[4] !== undefined ? match[4] : '-';\n            this.halfmoveClock = match[5] !== undefined ? parseInt(match[5], 10) : 0;\n            this.moveNumber = match[6] !== undefined ? parseInt(match[6], 10) : 1;\n            this.isValid = this.ranks.reduce(function (before, rank) { return before && rank.length === 8; }, true);\n        }\n    }\n    FenParser.prototype.toString = function () {\n        var positions = this.ranks.map(function (rank) { return rank.replace(fenPack, function (m) { return m.length.toString(); }); }).join('/');\n        return positions + \" \" + this.turn + \" \" + this.castles + \" \" + this.enpass + \" \" + this.halfmoveClock + \" \" + this.moveNumber;\n    };\n    FenParser.prototype.hasPiece = function (piece) {\n        return this.positions.indexOf(piece) >= 0;\n    };\n    FenParser.prototype.counts = function () {\n        var counts = {};\n        for (var _i = 0, _a = this.ranks; _i < _a.length; _i++) {\n            var rank = _a[_i];\n            for (var _b = 0, rank_1 = rank; _b < rank_1.length; _b++) {\n                var ch = rank_1[_b];\n                if (ch !== '-') {\n                    counts[ch] = (counts[ch] || 0) + 1;\n                }\n            }\n        }\n        return counts;\n    };\n    FenParser.isFen = function (text) { return (typeof text === 'string' && matchFullFEN.test(text)); };\n    return FenParser;\n}());\nexports.FenParser = FenParser;\nexports.default = FenParser;\n//# sourceMappingURL=fenParser.js.map","import { chessNotationToGridPosition } from './utils'\r\n/**\r\n *\r\n * @param {String} pos\r\n * @param {Boolean} isWhite\r\n */\r\nexport function Pawn(pos, isWhite) {\r\n\tthis.cnPos = pos\r\n\tthis.pos = pos\r\n\tthis.isWhite = isWhite\r\n\r\n\t/**\r\n\t *\r\n\t * @param {Object} chessboard\r\n\t */\r\n\tthis.draw = function (chessboard) {\r\n\t\tconst ctx = chessboard.ctx\r\n\t\tconst width = chessboard.cellWidth\r\n\t\tconst height = chessboard.cellHeight\r\n\t\tconst x = this.pos.x * width + width / 2\r\n\t\tconst y = this.pos.y * height + height / 2\r\n\t\tconst r = width * 0.3 * 0.5\r\n\r\n\t\tctx.beginPath()\r\n\t\tctx.arc(x, y, r, 0, 2 * Math.PI, false)\r\n\t\tif (this.isWhite) {\r\n\t\t\tctx.strokeStyle = 'rgb(0, 0, 0)'\r\n\t\t\tctx.stroke()\r\n\t\t} else {\r\n\t\t\tctx.fillStyle = 'rgb(0, 0, 0)'\r\n\t\t\tctx.fill()\r\n\t\t}\r\n\t\tctx.closePath()\r\n\t}\r\n}\r\n\r\n/**\r\n *\r\n * @param {String} pos\r\n * @param {Boolean} isWhite\r\n */\r\nexport function Rook(pos, isWhite) {\r\n\tthis.cnPos = pos\r\n\tthis.pos = pos\r\n\tthis.isWhite = isWhite\r\n\r\n\t/**\r\n\t *\r\n\t * @param {Object} chessboard\r\n\t */\r\n\tthis.draw = function (chessboard) {\r\n\t\tconst ctx = chessboard.ctx\r\n\t\tconst width = chessboard.cellWidth\r\n\t\tconst height = chessboard.cellHeight\r\n\t\tconst rectWidth = width * 0.4\r\n\t\tconst rectHeight = height * 0.6\r\n\t\tconst x = this.pos.x * width + (width - rectWidth) * 0.5\r\n\t\tconst y = this.pos.y * height + (height - rectHeight) * 0.5\r\n\t\tconst r = width * 0.3 * 0.5\r\n\r\n\t\tif (this.isWhite) {\r\n\t\t\tctx.strokeStyle = 'rgb(0,0,0)'\r\n\t\t\tctx.strokeRect(x, y, rectWidth, rectHeight)\r\n\t\t} else {\r\n\t\t\tctx.fillStyle = 'rgb(0,0,0)'\r\n\t\t\tctx.fillRect(x, y, rectWidth, rectHeight)\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n *\r\n * @param {String} pos\r\n * @param {Boolean} isWhite\r\n */\r\nexport function Knight(pos, isWhite) {\r\n\tthis.cnPos = pos\r\n\tthis.pos = pos\r\n\tthis.isWhite = isWhite\r\n\r\n\t/**\r\n\t *\r\n\t * @param {Object} chessboard\r\n\t */\r\n\tthis.draw = function (chessboard) {\r\n\t\tconst ctx = chessboard.ctx\r\n\t\tconst width = chessboard.cellWidth\r\n\t\tconst height = chessboard.cellHeight\r\n\t\tconst horizontalW = width * 0.5\r\n\t\tconst horizontalH = width * 0.2\r\n\t\tconst verticalW = width * 0.3\r\n\t\tconst verticalH = width * 0.6\r\n\t\tconst x = -verticalW * 0.5\r\n\t\tconst y = -verticalH * 0.5\r\n\t\tconst tx = this.pos.x * width + horizontalW\r\n\t\tconst ty = this.pos.y * height + horizontalW\r\n\r\n\t\tctx.translate(tx, ty)\r\n\t\tif (!this.isWhite) ctx.scale(-1, 1)\r\n\t\tctx.beginPath()\r\n\t\tctx.moveTo(x, y)\r\n\t\tctx.lineTo(x + horizontalW, y)\r\n\t\tctx.lineTo(x + horizontalW, y + horizontalH)\r\n\t\tctx.lineTo(x + verticalW, y + horizontalH)\r\n\t\tctx.lineTo(x + verticalW, y + verticalH)\r\n\t\tctx.lineTo(x, y + verticalH)\r\n\t\tctx.closePath()\r\n\t\tctx.setTransform(1, 0, 0, 1, 0, 0)\r\n\t\tctx.strokeStyle = 'rgb(0, 0, 0)'\r\n\t\tif (this.isWhite) {\r\n\t\t\tctx.strokeStyle = 'rgb(0, 0, 0)'\r\n\t\t\tctx.stroke()\r\n\t\t} else {\r\n\t\t\tctx.fillStyle = 'rgb(0, 0, 0)'\r\n\t\t\tctx.fill()\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n *\r\n * @param {String} pos\r\n * @param {Boolean} isWhite\r\n */\r\nexport function Bishop(pos, isWhite) {\r\n\tthis.cnPos = pos\r\n\tthis.pos = pos\r\n\tthis.isWhite = isWhite\r\n\r\n\t/**\r\n\t *\r\n\t * @param {Object} chessboard\r\n\t */\r\n\tthis.draw = function (chessboard) {\r\n\t\tconst ctx = chessboard.ctx\r\n\t\tconst width = chessboard.cellWidth\r\n\t\tconst height = chessboard.cellHeight\r\n\t\tconst tWidth = width * 0.4\r\n\t\tconst tHeight = height * 0.6\r\n\t\tconst x = this.pos.x * width + width * 0.5\r\n\t\tconst y = this.pos.y * height + (height - tHeight) * 0.5\r\n\r\n\t\tctx.beginPath()\r\n\t\tctx.moveTo(x, y)\r\n\t\tctx.lineTo(x + tWidth * 0.5, y + tHeight)\r\n\t\tctx.lineTo(x - tWidth * 0.5, y + tHeight)\r\n\t\tctx.closePath()\r\n\t\tctx.strokeStyle = 'rgb(0, 0, 0)'\r\n\t\tif (this.isWhite) {\r\n\t\t\tctx.strokeStyle = 'rgb(0, 0, 0)'\r\n\t\t\tctx.stroke()\r\n\t\t} else {\r\n\t\t\tctx.fillStyle = 'rgb(0, 0, 0)'\r\n\t\t\tctx.fill()\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n *\r\n * @param {String} pos\r\n * @param {Boolean} isWhite\r\n */\r\nexport function Queen(pos, isWhite) {\r\n\tthis.cnPos = pos\r\n\tthis.pos = pos\r\n\tthis.isWhite = isWhite\r\n\r\n\t/**\r\n\t *\r\n\t * @param {Object} chessboard\r\n\t */\r\n\tthis.draw = function (chessboard) {\r\n\t\tconst ctx = chessboard.ctx\r\n\t\tconst width = chessboard.cellWidth\r\n\t\tconst height = chessboard.cellHeight\r\n\t\tconst hWidth = width * 0.6\r\n\t\tconst hHeight = width * 0.1\r\n\t\tconst vWidth = height * 0.1\r\n\t\tconst vHeight = height * 0.6\r\n\t\tconst x = (width - vWidth) * 0.5 - width * 0.5\r\n\t\tconst y = (height - vHeight) * 0.5 - height * 0.5\r\n\t\tconst tx = this.pos.x * width + width * 0.5\r\n\t\tconst ty = this.pos.y * height + height * 0.5\r\n\r\n\t\tctx.translate(tx, ty)\r\n\t\tctx.rotate((45 * Math.PI) / 180)\r\n\t\tctx.beginPath()\r\n\t\tctx.moveTo(x, y)\r\n\t\tctx.lineTo(x + vWidth, y)\r\n\t\tctx.lineTo(x + vWidth, y + (vHeight - hHeight) * 0.5)\r\n\t\tctx.lineTo(x + vWidth + (hWidth - vWidth) * 0.5, y + (vHeight - hHeight) * 0.5)\r\n\t\tctx.lineTo(x + vWidth + (hWidth - vWidth) * 0.5, y + (vHeight + hHeight) * 0.5)\r\n\t\tctx.lineTo(x + vWidth, y + (vHeight + hHeight) * 0.5)\r\n\t\tctx.lineTo(x + vWidth, y + vHeight)\r\n\t\tctx.lineTo(x, y + vHeight)\r\n\t\tctx.lineTo(x, y + (vHeight + hHeight) * 0.5)\r\n\t\tctx.lineTo(x - (hWidth - vWidth) * 0.5, y + (vHeight + hHeight) * 0.5)\r\n\t\tctx.lineTo(x - (hWidth - vWidth) * 0.5, y + (vHeight - hHeight) * 0.5)\r\n\t\tctx.lineTo(x, y + (vHeight - hHeight) * 0.5)\r\n\t\tctx.closePath()\r\n\t\tctx.setTransform(1, 0, 0, 1, 0, 0)\r\n\t\tctx.strokeStyle = 'rgb(0, 0, 0)'\r\n\t\tif (this.isWhite) {\r\n\t\t\tctx.strokeStyle = 'rgb(0, 0, 0)'\r\n\t\t\tctx.stroke()\r\n\t\t} else {\r\n\t\t\tctx.fillStyle = 'rgb(0, 0, 0)'\r\n\t\t\tctx.fill()\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n *\r\n * @param {String} pos\r\n * @param {Boolean} isWhite\r\n */\r\nexport function King(pos, isWhite) {\r\n\tthis.cnPos = pos\r\n\tthis.pos = pos\r\n\tthis.isWhite = isWhite\r\n\r\n\t/**\r\n\t *\r\n\t * @param {Object} chessboard\r\n\t */\r\n\tthis.draw = function (chessboard) {\r\n\t\tconst ctx = chessboard.ctx\r\n\t\tconst width = chessboard.cellWidth\r\n\t\tconst height = chessboard.cellHeight\r\n\t\tconst hWidth = width * 0.6\r\n\t\tconst hHeight = width * 0.2\r\n\t\tconst vWidth = height * 0.2\r\n\t\tconst vHeight = height * 0.6\r\n\t\tconst x = (width - vWidth) * 0.5 - width * 0.5\r\n\t\tconst y = (height - vHeight) * 0.5 - height * 0.5\r\n\t\tconst tx = this.pos.x * width + width * 0.5\r\n\t\tconst ty = this.pos.y * height + height * 0.5\r\n\r\n\t\tctx.translate(tx, ty)\r\n\t\tctx.beginPath()\r\n\t\tctx.moveTo(x, y)\r\n\t\tctx.lineTo(x + vWidth, y)\r\n\t\tctx.lineTo(x + vWidth, y + (vHeight - hHeight) * 0.5)\r\n\t\tctx.lineTo(x + vWidth + (hWidth - vWidth) * 0.5, y + (vHeight - hHeight) * 0.5)\r\n\t\tctx.lineTo(x + vWidth + (hWidth - vWidth) * 0.5, y + (vHeight + hHeight) * 0.5)\r\n\t\tctx.lineTo(x + vWidth, y + (vHeight + hHeight) * 0.5)\r\n\t\tctx.lineTo(x + vWidth, y + vHeight)\r\n\t\tctx.lineTo(x, y + vHeight)\r\n\t\tctx.lineTo(x, y + (vHeight + hHeight) * 0.5)\r\n\t\tctx.lineTo(x - (hWidth - vWidth) * 0.5, y + (vHeight + hHeight) * 0.5)\r\n\t\tctx.lineTo(x - (hWidth - vWidth) * 0.5, y + (vHeight - hHeight) * 0.5)\r\n\t\tctx.lineTo(x, y + (vHeight - hHeight) * 0.5)\r\n\t\tctx.closePath()\r\n\t\tctx.setTransform(1, 0, 0, 1, 0, 0)\r\n\t\tctx.strokeStyle = 'rgb(0, 0, 0)'\r\n\t\tif (this.isWhite) {\r\n\t\t\tctx.strokeStyle = 'rgb(0, 0, 0)'\r\n\t\t\tctx.stroke()\r\n\t\t} else {\r\n\t\t\tctx.fillStyle = 'rgb(0, 0, 0)'\r\n\t\t\tctx.fill()\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// export pieces = [\r\n// \tnew Rook('a1', true),\r\n// \tnew Knight('b1', true),\r\n// \tnew Bishop('c1', true),\r\n// \tnew Queen('d1', true),\r\n// \tnew King('e1', true),\r\n// \tnew Bishop('f1', true),\r\n// \tnew Knight('g1', true),\r\n// \tnew Rook('a1', true),\r\n// \tnew Rook('h1', true),\r\n// \tnew Pawn('a2', true),\r\n// \tnew Pawn('b2', true),\r\n// \tnew Pawn('c2', true),\r\n// \tnew Pawn('d2', true),\r\n// \tnew Pawn('e2', true),\r\n// \tnew Pawn('f2', true),\r\n// \tnew Pawn('g2', true),\r\n// \tnew Pawn('h2', true),\r\n// \tnew Rook('a8', false),\r\n// \tnew Knight('b8', false),\r\n// \tnew Bishop('c8', false),\r\n// \tnew Queen('d8', false),\r\n// \tnew King('e8', false),\r\n// \tnew Bishop('f8', false),\r\n// \tnew Knight('g8', false),\r\n// \tnew Rook('a8', false),\r\n// \tnew Rook('h8', false),\r\n// \tnew Pawn('a7', false),\r\n// \tnew Pawn('b7', false),\r\n// \tnew Pawn('c7', false),\r\n// \tnew Pawn('d7', false),\r\n// \tnew Pawn('e7', false),\r\n// \tnew Pawn('f7', false),\r\n// \tnew Pawn('g7', false),\r\n// \tnew Pawn('h7', false),\r\n// ]\r\n","const letterToGrid = {\r\n\ta: 0,\r\n\tb: 1,\r\n\tc: 2,\r\n\td: 3,\r\n\te: 4,\r\n\tf: 5,\r\n\tg: 6,\r\n\th: 7,\r\n}\r\n\r\n/**\r\n *\r\n * @param {String} pos\r\n * @returns {{x:Number, grid:Number}}\r\n * @example\r\n * // return {0,0}\r\n * chessNotationToGridPosition('a1')\r\n */\r\nexport function chessNotationToGridPosition(pos) {\r\n\tconst y = letterToGrid[pos[0]]\r\n\tconst x = pos[1] - 1\r\n\treturn { x, y }\r\n}\r\n","export const rounds = [\r\n\t`[Event \"Match\"]\r\n[Site \"Philadelphie, USA\"]\r\n[Date \"1996.02.10\"]\r\n[Round \"1\"]\r\n[White \"Deep Blue (Computer)\"]\r\n[Black \"Garry Kasparov\"]\r\n[Result \"1-0\"]\r\n[ECO \"B22\"]\r\n[PlyCount \"73\"]\r\n[EventDate \"1996.??.??\"]\r\n[WhiteElo \"\"]\r\n[BlackElo \"\"]\r\n\r\n1. e4 c5 {Garry choisi sa défense favorite contre 1.e4} 2. c3\r\n{L'ordinateur évite les grandes lignes en jouant l'Alapine.} 2... d5 3.\r\nexd5 Qxd5 4. d4 Nf6 5. Nf3 Bg4 6. Be2 e6 7. h3 Bh5 8. O-O Nc6 9. Be3 cxd4 10.\r\ncxd4 Bb4 {Un coup assez rare.} (10... Be7 {Est le coup le plus joué dans\r\ncette position.} 11. Nc3 Qd6) 11. a3 Ba5 12. Nc3 Qd6 13. Nb5 Qe7 14. Ne5 Bxe2\r\n15. Qxe2 O-O 16. Rac1 Rac8 {Les deux camps ont terminé leur\r\ndéveloppement et activé toutes leurs pièces. Les blancs\r\njouent avec un pion isolé et vont devoir être très actifs\r\npour justifier cette légère faiblesse.} 17. Bg5 Bb6 18. Bxf6 gxf6\r\n19. Nc4 Rfd8 20. Nxb6 axb6 21. Rfd1 f5 22. Qe3 {Les blancs activent leur dame et\r\nmenace d'envahir l'aile roi adverse.} 22... Qf6 23. d5 Rxd5 24. Rxd5 exd5 25. b3\r\nKh8 26. Qxb6 Rg8 {Pour compenser leur structure de pions ruinée, les\r\nnoirs tentent d'organiser une attaque.} 27. Qc5 d4 $2 (27... f4 {garde la position\r\n&agrave; peu près égale.}) 28. Nd6 $1 f4 29. Nxb7 Ne5 30. Qd5 f3 31.\r\ng3 Nd3 32. Rc7 {Les pièces blanches se coordonnent pour attaquer la\r\nposition noire.} 32... Re8 $4 {L'erreur fatale.} 33. Nd6 Re1+ 34. Kh2 Nxf2 35.\r\nNxf7+ Kg7 36. Ng5+ Kh6 37. Rxh7+ {C'est la première fois qu'un ordinateur\r\nbat le champion du monde en cadence classique. Un moment historique  $1} 1-0`,\r\n\t`[Event \"Match\"]\r\n[Site \"Philadelphie USA\"]\r\n[Date \"1996.02.11\"]\r\n[Round \"2\"]\r\n[White \"Garry Kasparov\"]\r\n[Black \"Deep Blue (Computer)\"]\r\n[Result \"1-0\"]\r\n[ECO \"E04\"]\r\n[PlyCount \"145\"]\r\n[EventDate \"1996.??.??\"]\r\n[WhiteElo \"\"]\r\n[BlackElo \"\"]\r\n\r\n1. Nf3 d5 2. d4 e6 3. g3 c5 4. Bg2 Nc6 5. O-O Nf6 6. c4 dxc4 7. Ne5 Bd7 8. Na3\r\ncxd4 9. Naxc4 Bc5 10. Qb3 O-O 11. Qxb7 Nxe5 12. Nxe5 Rb8 13. Qf3 Bd6 14. Nc6\r\nBxc6 15. Qxc6 e5 16. Rb1 Rb6 17. Qa4 Qb8 18. Bg5 Be7 19. b4 {Kasparov sacrifie\r\nle pion b pour s'ouvrir un chemin vers le roi noir.} 19... Bxb4 20. Bxf6 gxf6\r\n(20... Rxf6 21. Rxb4 Qc8 {et les blancs gagnent une pi&egrave;ce.}) 21. Qd7 Qc8\r\n22. Qxa7 Rb8 23. Qa4 {L'&eacute;quilibre mat&eacute;riel est restaur&eacute;,\r\nmais la position du roi noir n'est pas enviable.} 23... Bc3 24. Rxb8 Qxb8 25.\r\nBe4 Qc7 {Il faut stopper l'id&eacute;e Dd7-f5.} 26. Qa6 Kg7 27. Qd3 Rb8 (27...\r\nh6 28. Qf3 Rb8 29. Qf5) 28. Bxh7 Rb2 29. Be4 Rxa2 30. h4 Qc8 31. Qf3 Ra1 32.\r\nRxa1 Bxa1 33. Qh5 {La pr&eacute;sence de fous de couleurs oppos&eacute;es laisse\r\ndes chances de nulle &agrave; Deep Blue, mais Kasparov pousse &agrave; chaque\r\ncoup pour garder l'initiative.} 33... Qh8 34. Qg4+ {Hors de question\r\nd'&eacute;changer les dames  $1} 34... Kf8 35. Qc8+ Kg7 36. Qg4+ Kf8 37. Bd5 Ke7\r\n38. Bc6 {A chaque coup, Kasparov tente de poser des probl&egrave;mes &agrave;\r\nl'ordinateur.} 38... Kf8 39. Bd5 Ke7 40. Qf3 Bc3 41. Bc4 Qc8 42. Qd5 Qe6 43. Qb5\r\n{Toujours pas  $1} 43... Qd7 {Les noirs tentent d&eacute;sesp&eacute;r&eacute;ment\r\nde rentrer dans une finale de fous de couleurs oppos&eacute;es.} 44. Qc5+ Qd6\r\n45. Qa7+ Qd7 46. Qa8 Qc7 47. Qa3+ Qd6 48. Qa2 f5 49. Bxf7 {La patience du\r\nchampion du monde paie. Il gagne un pion primordial.} 49... e4 50. Bh5 Qf6 51.\r\nQa3+ Kd7 52. Qa7+ Kd8 53. Qb8+ Kd7 54. Be8+ $1 {La chasse au roi commence  $1} 54...\r\nKe7 55. Bb5 Bd2 56. Qc7+ Kf8 57. Bc4 {Kasparov continue &agrave; priver le roi\r\nnoir de cases de fuites importantes.} 57... Bc3 58. Kg2 Be1 59. Kf1 Bc3 60. f4 $1\r\n{Maintenant que le roi adverse est coinc&eacute;, les blancs peuvent aller de\r\nl'avant.} 60... exf3 61. exf3 Bd2 62. f4 Ke8 63. Qc8+ Ke7 64. Qc5+ Kd8 65. Bd3\r\nBe3 66. Qxf5 Qc6 67. Qf8+ Kc7 68. Qe7+ Kc8 69. Bf5+ Kb8 70. Qd8+ Kb7 71. Qd7+\r\n{Kasparov &eacute;change finalement les dames selon ses conditions. Le pion\r\npass&eacute; va d&eacute;cider.} 71... Qxd7 72. Bxd7 Kc7 73. Bb5 1-0`,\r\n\t`[Event \"Match\"]\r\n[Site \"Philadelphie, USA\"]\r\n[Date \"1996.02.13\"]\r\n[Round \"3\"]\r\n[White \"Deep Blue (Computer)\"]\r\n[Black \"Garry Kasparov\"]\r\n[Result \"1/2-1/2\"]\r\n[ECO \"B22\"]\r\n[PlyCount \"78\"]\r\n[EventDate \"1996.??.??\"]\r\n[WhiteElo \"\"]\r\n[BlackElo \"\"]\r\n\r\n1. e4 c5 2. c3 d5 3. exd5 Qxd5 4. d4 Nf6 5. Nf3 Bg4 6. Be2 e6 7. O-O {Deep Blue\r\nest le premier &agrave; d&eacute;vier. Dans la premi&egrave;re partie,\r\nl'ordinateur avait pos&eacute; une question au fou g4 par h3.} 7... Nc6 8. Be3\r\ncxd4 9. cxd4 Bb4 10. a3 Ba5 11. Nc3 Qd6 12. Ne5 Bxe2 13. Qxe2 Bxc3 {Cette fois,\r\nKasparov d&eacute;cide de ne pas laisser le cavalier rentrer en b5 et\r\nl'&eacute;change contre le fou de cases noires.} 14. bxc3 Nxe5 15. Bf4 Nf3+ 16.\r\nQxf3 Qd5 17. Qd3 Rc8 18. Rfc1 Qc4 19. Qxc4 Rxc4 {Rentre dans une finale de tours\r\navec fou contre cavalier. Kasparov va pouvoir essayer d'exploiter les quelques\r\npions faibles de la position blanche.} 20. Rcb1 b6 21. Bb8 Ra4 22. Rb4 {Deep\r\nBlue joue avec &eacute;nergie, essayant de s'activer au maximum face &agrave; un\r\ncamp noir pas encore totalement d&eacute;velopp&eacute;.} 22... Ra5 23. Rc4 O-O\r\n24. Bd6 Ra8 25. Rc6 b5 26. Kf1 Ra4 27. Rb1 a6 28. Ke2 h5 {Offre un peu d'espace\r\nau roi noir et joue sur les deux flancs de l'&eacute;chiquier.} 29. Kd3 {Les\r\nblancs centralisent leur roi pour la finale.} 29... Rd8 30. Be7 Rd7 31. Bxf6\r\n{Les blancs se s&eacute;parent du fou pour cr&eacute;er quelques faiblesses dans\r\nle camp adverse.} 31... gxf6 32. Rb3 Kg7 33. Ke3 e5 34. g3 exd4+ 35. cxd4 Re7+\r\n36. Kf3 Rd7 37. Rd3 Raxd4 38. Rxd4 Rxd4 39. Rxa6 b4 {Les pions de l'aile dame\r\nsont &eacute;chang&eacute;s, et la finale de tours avec trois pions contre trois\r\n&agrave; l'aile roi est une nulle connue.} 1/2-1/2`,\r\n\t`[Event \"Match\"]\r\n[Site \"Philadelphie, USA\"]\r\n[Date \"1996.02.14\"]\r\n[Round \"4\"]\r\n[White \"Garry Kasparov\"]\r\n[Black \"Deep Blue (Computer)\"]\r\n[Result \"1/2-1/2\"]\r\n[ECO \"D46\"]\r\n[PlyCount \"100\"]\r\n[EventDate \"1996.??.??\"]\r\n[WhiteElo \"\"]\r\n[BlackElo \"\"]\r\n\r\n1. Nf3 {Kasparov reste fid&egrave;le &agrave; sa strat&eacute;gie en gardant le\r\njeu ferm&eacute;.} 1... d5 2. d4 c6 3. c4 e6 4. Nbd2 Nf6 5. e3 Nbd7 6. Bd3 Bd6\r\n7. e4 dxe4 8. Nxe4 Nxe4 9. Bxe4 O-O 10. O-O h6 11. Bc2 {Kasparov a un fort\r\ncentre et un avantage d'espace qui va l'avantager &agrave; long-terme.} 11... e5\r\n{les noirs cherchent du contre-jeu en s'activant.} 12. Re1 exd4 13. Qxd4 Bc5 14.\r\nQc3 a5 15. a3 Nf6 16. Be3 Bxe3 17. Rxe3 Bg4 18. Ne5 Re8 19. Rae1 Be6 20. f4 Qc8\r\n21. h3 b5 22. f5 Bxc4 23. Nxc4 bxc4 24. Rxe8+ Nxe8 25. Re4 Nf6 (25... Qxf5 26.\r\nRxe8+ Rxe8 27. Bxf5 {aurait &eacute;t&eacute; une erreur &eacute;trange  $1}) 26.\r\nRxc4 Nd5 27. Qe5 Qd7 28. Rg4 f6 29. Qd4 Kh7 30. Re4 Rd8 31. Kh1 Qc7 32. Qf2 Qb8\r\n33. Ba4 c5 34. Bc6 c4 35. Rxc4 Nb4 36. Bf3 (36. axb4 $4 Rd1+ 37. Qg1 Rxg1+ 38.\r\nKxg1 axb4 {et les noirs gagnent.}) 36... Nd3 37. Qh4 $6 {Kasparov perd le fil. Il\r\naurait &eacute;t&eacute; plus solide de laisser la dame au centre.} (37. Qe3\r\nQxb2 38. Qe7 Qa1+ 39. Kh2 Qe5+ 40. Qxe5 Nxe5 41. Rc5 Nxf3+ 42. gxf3 a4 43. Ra5\r\nRd3 44. Rxa4 Rxf3 $11) 37... Qxb2 38. Qg3 Qxa3 39. Rc7 Qf8 40. Ra7 Ne5 41. Rxa5\r\nQf7 42. Rxe5 $5 {Kasparov voit qu'il peut construire une forteresse et assurer la\r\nnulle.} 42... fxe5 43. Qxe5 Re8 44. Qf4 Qf6 45. Bh5 Rf8 46. Bg6+ Kh8 47. Qc7 Qd4\r\n48. Kh2 Ra8 49. Bh5 Qf6 50. Bg6 Rg8 {La nulle est sign&eacute;e. Aucun camp ne\r\npeut progresser.} 1/2-1/2`,\r\n\t`[Event \"Match\"]\r\n[Site \"Philadelphie, USA\"]\r\n[Date \"1996.02.16\"]\r\n[Round \"5\"]\r\n[White \"Deep Blue (Computer)\"]\r\n[Black \"Garry Kasparov\"]\r\n[Result \"0-1\"]\r\n[ECO \"C47\"]\r\n[PlyCount \"94\"]\r\n[EventDate \"1996.??.??\"]\r\n[WhiteElo \"\"]\r\n[BlackElo \"\"]\r\n\r\n1. e4 e5 $1 {Un coup somme toute logique, mais quelle surprise de ne pas voir\r\nKasparov jouer son chouchou 1...c5  $1} 2. Nf3 Nf6 {La d&eacute;fense russe, un\r\nchoix solide.} 3. Nc3 (3. Nxe5 d6 4. Nf3 Nxe4 {Est une suite plus\r\nth&eacute;orique, mais Deep Blue pr&eacute;f&egrave;re d&eacute;velopper ses\r\npi&egrave;ces.}) 3... Nc6 4. d4 {L'&eacute;cossaise des quatre cavaliers. Encore\r\nun choix solide.} (4. Bb5 {est l'espagnole des quatre cavaliers.}) 4... exd4 5.\r\nNxd4 Bb4 6. Nxc6 bxc6 7. Bd3 d5 8. exd5 cxd5 9. O-O O-O 10. Bg5 c6 11. Qf3 Be7\r\n(11... Bd6 {Un coup aujourd'hui plus en vogue. Les noirs ne craignent pas de\r\nvoir les blancs endommager leur roque, car ils obtiendraient la paire de fous et\r\ndes lignes ouvertes vers le roi adverse.}) 12. Rae1 (12. h3 {Un coup plus commun\r\ndirig&eacute; contre l'invasion du fou de cases blanches.}) 12... Re8 13. Ne2 h6\r\n14. Bf4 Bd6 15. Nd4 Bg4 16. Qg3 Bxf4 17. Qxf4 Qb6 18. c4 Bd7 19. cxd5 cxd5 20.\r\nRxe8+ Rxe8 21. Qd2 Ne4 22. Bxe4 dxe4 23. b3 Rd8 {Dans cette position totalement\r\n&eacute;gale, Kasparov propose la nulle &agrave; Deep Blue, mais l'ordinateur la\r\nrefuse.} 24. Qc3 f5 25. Rd1 Be6 26. Qe3 Bf7 27. Qc3 f4 {Profitant des errements\r\ndes blancs, Kasparov se saisit de l'initiative pour ne plus la l&acirc;cher  $1}\r\n28. Rd2 Qf6 29. g3 Rd5 30. a3 Kh7 {Le russe est maintenant gagnant  $1} 31. Kg2\r\nQe5 $3 32. f3 e3 33. Rd3 e2 34. gxf4 e1=Q 35. fxe5 Qxc3 36. Rxc3 Rxd4 37. b4 Bc4\r\n38. Kf2 g5 39. Re3 Be6 40. Rc3 Bc4 41. Re3 Rd2+ 42. Ke1 Rd3 43. Kf2 Kg6 44. Rxd3\r\nBxd3 45. Ke3 Bc2 46. Kd4 Kf5 47. Kd5 h5 {Deep Blue abandonne  $1 Une fois\r\nl'initiative pass&eacute;e aux mains du champion du monde, l'IA n'a rien pu\r\nfaire. Une belle victoire de l'homme sur la machine.} 0-1`,\r\n\t`[Event \"Match\"]\r\n[Site \"Philadelphie, USA\"]\r\n[Date \"1996.02.17\"]\r\n[Round \"6\"]\r\n[White \"Garry Kasparov\"]\r\n[Black \"Deep Blue (Computer)\"]\r\n[Result \"1-0\"]\r\n[ECO \"D30\"]\r\n[PlyCount \"85\"]\r\n[EventDate \"1996.??.??\"]\r\n[WhiteElo \"\"]\r\n[BlackElo \"\"]\r\n\r\n1. Nf3 {Kasparov choisit &agrave; nouveau le terrain du combat\r\nstrat&eacute;gique.} 1... d5 2. d4 c6 3. c4 e6 4. Nbd2 Nf6 5. e3 c5 6. b3 Nc6 7.\r\nBb2 cxd4 8. exd4 Be7 9. Rc1 O-O 10. Bd3 Bd7 11. O-O {Kasparov a termin&eacute;\r\nson d&eacute;veloppement. Il a le contr&ocirc;le du centre et des pi&egrave;ces\r\nplus actives.} 11... Nh5 12. Re1 Nf4 13. Bb1 Bd6 14. g3 Ng6 15. Ne5 Rc8 16. Nxd7\r\nQxd7 17. Nf3 Bb4 18. Re3 Rfd8 19. h4 Nge7 20. a3 $1 {Le russe obtient un avantage\r\nmassif  $1} (20. Bxh7+ $1 {Ce coup gagne &eacute;galement, mais de mani&egrave;re\r\nplus compliqu&eacute;e} 20... Kxh7 21. Ng5+ Kg8 22. Qh5 Qe8 23. Qh7+ Kf8 24.\r\nQh8+ Ng8 25. Rc2 {et les blancs vont l'emporter, mais Garry veut &eacute;viter\r\ntoute erreur de calcul potentielle.}) 20... Ba5 21. b4 (21. Bxh7+ {&eacute;tait\r\nencore possible.}) 21... Bc7 22. c5 {Dur de trouver un plan pour les noirs, qui\r\nsont totalement &eacute;touff&eacute;s. Kasparov, lui, peut jouer au centre ou\r\nattaquer &agrave; l'aile roi.} 22... Re8 23. Qd3 g6 24. Re2 Nf5 25. Bc3 h5 26.\r\nb5 Nce7 27. Bd2 Kg7 28. a4 Ra8 29. a5 a6 30. b6 Bb8 31. Bc2 {Les noirs semblent\r\nsur le point de se faire bouter hors de l'&eacute;chiquier  $1} 31... Nc6 32. Ba4\r\nRe7 33. Bc3 Ne5 34. dxe5 Qxa4 35. Nd4 Nxd4 36. Qxd4 Qd7 37. Bd2 Re8 38. Bg5\r\n{Kasparov contr&ocirc;le l'int&eacute;gralit&eacute; du plateau.} 38... Rc8 39.\r\nBf6+ {Les cases noires sont maintenant sous pression  $1} 39... Kh7 40. c6 $3 {Le\r\nbouquet final.} 40... bxc6 41. Qc5 Kh6 42. Rb2 Qb7 43. Rb4 {et les noirs n'ont\r\nplus le moindre coup utile. Deep Blue abandonne.} 1-0`,\r\n]\r\n"],"names":[],"version":3,"file":"index.4d6bcbeb.js.map","sourceRoot":"/__parcel_source_root/"}